// Code generated by go-bindata.
// sources:
// templates/ginCreator.tmpl
// templates/ginUpdater.tmpl
// templates/searcher.tmpl
// templates/searcher_enums.tmpl
// templates/sqlCreator.tmpl
// templates/sqlUpdater.tmpl
// templates/updateRequest.tmpl
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesGincreatorTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x91\x41\x6f\x9b\x40\x10\x85\xcf\xec\xaf\x98\x72\xa8\xc0\x72\x76\xa3\x4a\xbd\x58\xca\x21\xb1\x49\xeb\x2a\xb2\x5b\x1b\x1f\x7a\x5c\x60\x0c\xdb\xc0\xae\x3b\x2c\x4d\x2a\x8b\xff\xde\x5d\xa0\x55\x9c\x4a\xbd\xf5\x36\x62\xde\x3c\xbe\xf7\xf6\x24\xf3\x47\x59\x22\xe4\x84\xd2\x22\x13\x33\x16\x7c\x48\x36\xc9\xee\x36\x4d\x56\xb0\xdc\xae\x92\x39\x7c\xdd\x1e\x76\x90\xac\xd6\xe9\x1e\x6e\x77\x09\xdc\x1f\xd2\xf5\x43\xc2\x58\x50\xa2\x46\x72\x47\x05\x1c\xc9\x34\x70\x3e\xf3\xf4\xe7\x09\x37\xb2\xc1\xbe\x67\x41\xd7\x2a\x5d\x42\x65\xed\x69\x21\x44\xa9\x6c\xd5\x65\x3c\x37\x8d\xc8\x48\x49\xdd\x5a\x49\x8f\x28\x4a\x73\x95\x61\x89\x56\x4c\x56\x86\xc4\xc0\x61\x88\xcd\x04\x63\xaa\x39\x19\xb2\x10\x31\x80\xf0\x85\x43\xa9\xf4\x55\x69\xb4\xca\xfd\x14\xbe\x5a\x7e\x6b\x8c\x22\xa3\x45\xfb\xbd\x7e\x0e\x99\x5b\x5a\xc7\xd4\x42\x38\xd1\xad\x07\xcb\xbe\x0f\x59\xcc\x98\x10\xb0\xc1\xa7\x0b\xee\xe5\x50\xc3\x47\xa9\x8b\x1a\x09\x9e\x54\x5d\x03\xa1\xed\x48\x83\x84\x6a\xfa\x7a\x34\x74\x19\x76\x2a\xaf\xe5\xce\xd1\x9b\xa6\x15\xfe\x11\xcb\xb6\xed\x1a\x07\x60\x2b\x69\x9d\xc7\xe5\xdd\xe0\x9f\x21\x7c\x3e\xa4\x30\xf6\xf5\x69\xbf\xdd\x70\x76\xec\x74\xfe\x6f\xb4\xa8\xc8\x60\xe6\x33\xf2\xd5\x5d\x0c\xae\x07\x3e\x2d\xee\xfd\xe9\x99\x05\x13\xb5\x77\x8a\x72\x98\x79\xc5\xd2\x68\x8b\xcf\x36\xf6\xeb\xe0\x87\x24\xb0\x63\x39\xfc\xd5\xcb\x05\x48\x04\x8b\x1b\xc8\xf9\x9d\xd2\x85\x27\x8a\xde\x5a\x57\x57\x10\xa8\x23\xf8\xdd\x9b\x1b\xd0\xaa\x1e\x6c\x82\x9c\x0f\x82\xf7\xd7\xd7\xf3\x11\xe3\x1c\x3a\x89\xa1\x70\xe1\xa5\x3c\xf1\x73\x14\xf7\xb1\xd7\x8e\x4c\x6e\xea\x07\xb3\x62\x0e\xd3\x9f\x5c\xd4\xfd\x97\x87\xbf\xd3\x1a\x9f\x33\xe6\x63\xf2\xe8\x3f\x30\x4c\x97\xef\x5e\x5c\xaa\x22\x5c\xa8\x62\x10\xff\xd6\xf6\xac\x67\xbf\x02\x00\x00\xff\xff\xdc\x4b\xf0\x22\x28\x03\x00\x00")

func templatesGincreatorTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGincreatorTmpl,
		"templates/ginCreator.tmpl",
	)
}

func templatesGincreatorTmpl() (*asset, error) {
	bytes, err := templatesGincreatorTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/ginCreator.tmpl", size: 808, mode: os.FileMode(420), modTime: time.Unix(1468871773, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGinupdaterTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x92\xc1\x6f\x9b\x30\x14\xc6\xcf\xf8\xaf\x78\xe3\x30\x41\xd4\xda\xd5\xa4\x5d\x22\xe5\x90\x26\x74\xed\x54\x25\x5b\x42\x0e\x3b\x1a\x78\x01\x2f\x60\x53\x63\xaf\x9d\x22\xfe\xf7\xd9\xc0\xa6\x6e\xaa\x72\xdb\x05\x3d\xf1\xbe\xdf\xf7\xbe\xf7\xe4\x96\xe7\x27\x5e\x22\xd8\xb6\xe0\x06\x09\x9b\x91\xe0\x53\xb2\x49\x76\xcb\x34\x59\xc3\x6a\xbb\x4e\xae\xe0\xdb\xf6\xb0\x83\x64\xfd\x90\xee\x61\xb9\x4b\xe0\xee\x90\x3e\x3c\x26\x84\x04\x25\x4a\xd4\x0e\x2a\xe0\xa8\x55\x03\xe7\x33\x4d\x7f\xb6\xb8\xe1\x0d\xf6\x3d\x09\x6c\x27\x64\x09\x95\x31\xed\x9c\xb1\x52\x98\xca\x66\x34\x57\x0d\xcb\xb4\xe0\xb2\x33\x5c\x9f\x90\x95\xea\x3a\xc3\x12\x0d\x9b\xac\x94\x66\x63\x0e\x4d\x66\x8c\x10\xd1\xb4\x4a\x1b\x88\x08\x40\xf8\xca\xa1\x14\xf2\xba\x54\x52\xe4\xbe\x0a\xff\x69\x7e\x6f\x94\xd0\x4a\xb2\xee\xa9\x7e\x09\x49\x4c\x08\x63\xb0\xc1\xe7\xbf\xc2\x1d\x86\x19\xf7\x5c\x16\x35\x6a\x78\x16\x75\x0d\x1a\x8d\xd5\x12\x38\x54\xd3\xdf\xa3\xd2\xf0\x06\xb4\xc3\x27\x8b\x9d\xe9\xa8\xf3\xf5\xd6\x69\x85\x7f\x10\xde\x75\xb6\xc1\x0e\x4c\xc5\x8d\xfb\xe0\x05\x7e\x1c\x9a\x21\x7c\x59\xa6\xab\x7b\x77\xc1\xe1\x5a\xde\xf0\xf3\x7e\xbb\xa1\xe4\x68\x65\x7e\x39\x76\x54\x64\x30\xf3\x4b\xd2\xf5\x6d\x0c\xee\x10\x74\x6a\xdc\x79\xf4\x4c\x82\x69\x23\xef\x14\xe5\x30\xf3\x8a\x95\x92\x06\x5f\x4c\xec\xdb\xc1\x0f\xae\xc1\x5e\xda\xd1\x69\x50\x6b\x98\x2f\x20\xa7\xb7\x42\x16\x3e\x59\xf4\xde\x6a\x77\xd3\x20\x10\x47\xf0\xcd\x77\x0b\x90\xa2\x1e\xfc\x82\x9c\x0e\x8a\x8f\x37\x37\x57\x63\x9e\x73\xe8\x24\x4a\x87\x73\x2f\xa5\x89\xaf\xa3\xb8\x8f\xbd\x76\x0c\xe7\xaa\x9e\x4c\x63\x16\x7e\xdd\xfd\xd7\xc7\x37\xf2\xf8\x5d\x63\x3a\xd6\xd1\xff\x98\x3f\x91\x1f\x5e\x91\xee\x81\x1a\xdb\x39\x34\x54\xa7\x70\x60\x7e\x23\x3d\xe9\xc9\xaf\x00\x00\x00\xff\xff\xd6\x42\x09\x81\x35\x03\x00\x00")

func templatesGinupdaterTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGinupdaterTmpl,
		"templates/ginUpdater.tmpl",
	)
}

func templatesGinupdaterTmpl() (*asset, error) {
	bytes, err := templatesGinupdaterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/ginUpdater.tmpl", size: 821, mode: os.FileMode(420), modTime: time.Unix(1468871773, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSearcherTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x3a\xeb\x73\xdb\x36\xf2\x9f\xad\xbf\x62\xcb\x5f\x9b\x90\xae\x7e\x94\xa7\x97\xeb\x07\x4d\xd5\x9b\x24\x56\x12\x5f\x5d\xdb\xb5\x94\xeb\x87\x4c\xa6\xa6\x48\x50\x62\x43\x11\x32\x00\xf9\x51\xd5\xff\xfb\xed\x2e\xc0\x97\x2c\x2b\xb2\x2f\xd7\x99\xcb\x78\x46\x24\xb0\xef\x5d\xec\x03\xcc\x22\x8a\x3f\x45\x53\x01\x5a\x44\x2a\x9e\x75\x3a\xbd\x1e\xbc\x1d\x9e\x0c\xcf\x5f\x8e\x87\x87\xf0\xfa\xf4\x70\xd8\x85\xe1\xe1\xd1\x78\x04\xbf\x1e\x1d\x1f\xc3\xab\x21\x1c\x9f\x8e\xc6\x08\x45\x80\x53\x51\x08\x15\x19\x91\x40\xaa\xe4\x1c\x56\xab\x70\x7c\xbb\x10\x27\xd1\x5c\xdc\xdd\xd1\xfe\x52\x67\xc5\x14\x66\xc6\x2c\xfa\xbd\xde\x34\x33\xb3\xe5\x24\x8c\xe5\xbc\x37\x51\x59\x54\x68\x13\xa9\x4f\xa2\x37\x95\xff\x3f\x11\x53\x61\x7a\x8e\x98\x54\x3d\x2b\x8a\x50\x9d\x4e\x36\x5f\x48\x65\xc0\xef\xec\x79\x49\x64\xa2\x49\xa4\x45\x4f\x5f\xe6\x1e\xbe\x8b\x22\x96\x09\x92\xef\xfd\xae\x65\x41\x0b\xe9\xdc\xd0\x4f\x26\x7b\x99\x5c\x9a\x8c\x81\x0a\xa4\x4b\xec\xe9\x59\x1b\x85\xe0\xda\xeb\xe0\x73\x43\x96\xdf\xe7\x32\x53\xb2\x20\xb2\x37\xb4\x67\x99\x93\x1e\xe0\x39\x85\x8e\x58\x8a\xbb\x3b\xa4\xa2\x2f\xa1\x89\x9c\x47\x05\x61\x2e\x33\xa5\x04\x32\x0c\xd8\x7c\x2d\x33\x8c\x98\xdc\xb9\xb8\x5c\x0a\x6d\x20\xd3\x10\xa1\xa5\x51\xfd\x3c\xfb\x23\x9a\xe4\x02\xda\xfb\xa9\x54\x6d\xf4\xb0\x63\x48\x92\x2d\x24\x51\xad\x65\x6c\x60\xd5\xd9\x7b\x93\x89\x3c\xd1\xf0\xe1\x63\x0b\x9a\x57\xe1\x82\xac\xd4\xf7\x52\x06\xf1\x2e\x08\x38\x37\x42\x6d\x80\xa6\xe5\x1a\x9c\x81\x08\xfe\x54\x25\x42\xbd\xba\x85\xfd\x16\x78\xb9\xea\xe0\xa5\x7d\x25\xf8\xe3\x6c\x9e\xa1\xbe\x85\x29\xf7\x72\x5a\x60\x4a\x69\xaa\x45\x6b\x4b\xf2\x0a\xee\xdd\xdd\xb7\x9f\x15\x9f\xed\xc6\xc2\xc3\x35\x5a\x3f\x2b\xc0\xcc\xd6\xac\xe2\x0c\x41\x04\xcc\x2c\xb2\xa6\x26\x03\x1b\x09\x13\x01\x56\x13\x0c\x54\x59\x74\x41\xa3\x37\xdd\x23\xda\x5b\x09\xb3\x54\x85\x48\x36\x99\xda\x71\x2f\x0c\x0b\xf6\x26\x5a\xde\x80\x28\x96\xf3\xe7\x09\x7b\x6a\x26\xf2\x45\xba\xcc\x0b\xa1\x75\x27\x96\x18\xd0\xe0\xaf\x56\x5f\x1b\x87\x0d\xfd\x01\x34\xcf\xc3\x6a\xa5\xa2\x02\x0f\xda\xd7\x59\x17\xbe\xbe\xe1\x5d\xeb\x49\x12\xd3\xfa\xee\xee\xae\x81\xcf\x2f\x37\xa1\xd3\x6e\xb5\xca\x52\x10\x97\x88\x0d\x07\x6b\x60\x56\xc8\x01\x64\xd2\x44\xab\x95\x28\x12\x66\xc6\xbf\x18\x90\x24\xf8\x3f\x47\xa7\x27\x50\x90\x4c\x2c\x66\x54\x98\x2f\x26\x70\xdc\x14\xd2\x1e\x31\x14\xc5\xe3\x55\x62\x6b\x77\xbc\x86\x40\x28\xcf\xe1\x84\xd1\x99\xa9\x35\xbf\x66\x87\xb2\x88\x32\xe5\x67\xeb\x6d\xf4\xde\x52\x0b\x70\x0e\x1f\xfd\x72\x0c\x18\xf5\xea\xb6\x93\x2e\x8b\x18\x7c\xbd\xc1\x5b\x41\x93\xba\x1f\x94\x32\xe1\xf9\xd0\x18\x3a\xf1\x0c\x34\x3d\xef\xa6\x1b\xa6\x1b\x78\xc8\x23\xfd\xce\xde\x9e\x95\xdd\x69\x7b\x38\x29\x75\xdd\x2b\xbd\xb0\x87\x7f\x25\x8c\xe7\xa2\xfb\xe7\x48\xe9\x59\x94\x8f\xc5\x0d\xc6\xe8\x7c\x91\x8b\xb9\x40\x77\x70\x92\xd4\x94\x25\x25\xe6\x94\x69\x28\xd5\xb4\xb7\xf8\x34\xed\x55\x59\xee\xff\x08\xc1\xe1\x62\x66\xdc\xa6\x7f\x83\x03\xea\xef\x7f\xf8\x38\xb9\x35\xa2\x0b\x42\x29\xa9\x02\x52\xfe\x2a\x52\x40\xe9\xd4\xd9\xa6\xf3\xdf\x30\x0d\xd3\x1f\x40\x33\x3c\x1a\x76\x49\x44\x1a\x2d\x73\xd3\xb0\x61\x91\xe5\x5d\xc0\x14\x1e\x0e\x49\xcc\xd4\xf7\xde\x17\xe5\xf1\x9d\x5b\x7d\xe0\xe2\x9b\xab\x0b\x8e\x04\x3c\xd1\xa8\x91\xf6\xf0\x24\x07\x4d\x1b\x5b\x4d\x7d\x62\x1d\x74\x89\xa2\x33\xf9\xfb\x62\xfe\x1f\x18\xbd\xc2\x6e\x98\x7d\x7f\x93\xdd\x5b\x6c\xfc\x89\x13\x27\xb0\x86\xe7\x00\x34\x8a\xcc\xe9\x0a\x51\x38\x56\xd9\xdc\xb7\x2f\xfe\x04\x05\xbe\xf0\x2e\x82\x86\x2f\x8c\x7a\x9c\x37\xe2\x35\x0f\xec\x6b\xb4\xff\x43\x2e\xda\xea\x8b\xed\x6e\x78\xfe\x8d\x7e\x4e\x29\x51\xc2\x03\xf9\x92\xfc\x62\x54\xcb\x33\xb5\x2f\x36\x55\x1b\x97\xdd\xf9\x59\x2f\x44\x9c\xa5\x59\x4c\x1c\xdb\xfd\xc4\x26\x6e\x16\xa5\x5d\x01\x37\x65\xf0\x66\xf9\xa3\x1a\xf4\xaf\x28\x5f\x52\x56\x41\xf4\x34\x8a\xc5\xea\xae\x84\xb8\xa2\x0d\xae\x52\x0b\xdb\x8c\x40\xf5\x50\x16\x2b\xf7\x4e\x40\xaf\x65\x91\x64\x26\x93\x05\xd4\x4f\x0e\x2c\x2e\x17\x36\x97\xb5\xb2\x70\xda\x86\x80\x7a\x9c\x24\x53\x22\x36\xd9\x95\xa8\xca\xd7\x63\x4c\x51\xd2\x7b\x82\x2d\x8e\xf4\xa1\xd0\x31\x06\x03\xa5\xc9\x89\x94\x79\x09\x91\x35\x36\x2a\x2d\x5e\x26\x49\xd3\x6b\x54\x02\xf1\x79\x2e\xcc\x4c\x72\xb6\x8e\x92\xa4\x76\x26\xbd\xb7\x3b\x9c\x10\x00\xa5\x74\x21\xd7\xb5\xc5\x1a\x53\x7e\x69\x63\xa4\x39\xfc\x05\xa2\x22\xe1\xe5\xca\x86\xb4\xfe\xf2\xe4\x10\x91\x8f\x52\xb8\x95\x4b\xb8\xc6\x12\x46\xd4\xe5\x15\x1e\xae\x2c\xb1\x36\xeb\xbb\xae\x14\x28\xbf\x69\xd5\x66\xcc\x1b\x5a\x85\x95\xfc\x3e\xba\x28\x47\x37\x76\xc1\xc3\xbe\x00\x7f\xe8\x6c\xfb\xe9\xbd\xa3\x4d\xb0\xc1\x8a\xd1\x01\xd2\xb0\x0a\x87\x01\xbc\x1d\x57\xab\xb5\xfb\x07\x70\x7a\xce\xcb\x58\xea\xac\x38\xa4\x0d\xca\xfc\x5c\x09\x88\xf2\x1c\xbb\x3f\x13\x96\x79\x44\xad\x71\x6b\x49\x1c\xd4\xb6\xf6\xd3\x07\x9c\xd9\x85\xab\xf5\x48\xee\x42\x9c\x4e\x21\x0c\xc3\x6d\xfa\x04\xdb\x18\x53\xf4\xa4\x94\x69\x36\x60\xe2\x96\x8d\xac\xbe\x2d\xd0\x5d\x7c\x2f\x4d\xd2\x07\x74\x1e\x2d\x54\xd6\xe8\x93\xd7\x68\x85\xcf\x5b\x1f\xd8\x58\x98\x5c\x46\x0b\x4c\x7a\xc6\x67\xd9\x83\x2e\x25\x0a\xe4\x88\x36\xfd\x0d\x85\x27\xc6\x36\xe5\x91\x1e\xc4\x2f\xf6\x9f\xa5\x81\x05\x42\x07\x96\x8d\xeb\x00\xa2\xc5\x02\x83\xd3\xaf\xd7\xd0\x87\x94\x40\x5d\xce\xd1\xaa\x19\xb2\xdc\x1a\x63\x70\x6a\x2b\xb7\xa6\xe8\xa1\x18\xd3\x22\xc7\x63\x87\x91\xf5\xae\x15\xc9\x24\x0d\xe6\x58\xac\x36\x93\x65\x96\xf3\xd1\x88\xb6\xf7\xf6\x8f\x72\x2a\x49\xe0\x3b\x41\xd0\x55\x9b\xaa\xc9\x67\x1c\xc4\x5a\x33\x7e\xdb\x10\xb4\xd4\x75\x3a\x22\xe5\x4d\xf6\x18\x09\x63\xbb\x73\x0c\x45\xdb\x77\xf1\xeb\x4e\x36\xd8\x62\x80\x1d\xf5\x2f\xb9\xfb\x79\x39\x21\xec\xa2\xab\x15\x78\x00\x8c\xb4\x59\x27\x37\x57\x54\x4a\xd9\xf7\xbf\x4e\x2b\xcb\xcf\x97\xd5\x78\xb3\x8b\x5e\x4e\xe8\x01\x58\xb4\xcd\x9a\x9d\xd9\xf9\xbc\xa5\x17\xa7\x15\x6b\x15\x9a\x8a\x69\x9a\xe1\xdd\x05\xc1\xe2\x88\x32\x41\x8d\x09\x84\xdf\x75\xf6\x87\xd8\x35\x3e\x1d\x3f\x9f\x10\x4f\x98\x4e\x97\x89\x8c\x90\xc6\x4e\x5a\x55\x0a\x84\x78\x76\x6b\xbb\xd4\xf4\x60\xbf\x22\x18\x38\x18\x1b\x11\xd5\x6a\xc3\xa9\x65\x5d\xab\xb4\xa7\x05\xac\x21\xbb\xf9\xf5\xa9\xae\xb4\x5c\xb7\xa4\xdd\x6c\xbd\x68\xee\xe4\x6c\xa7\xcc\x00\x9e\x6d\x2a\xde\x8d\xdc\xea\xfe\x55\x29\xb6\x59\xa3\xfb\x2d\xe6\x2e\x7b\xae\x47\xcd\x5b\x77\x33\x33\xe2\xf4\x46\x73\xd3\x75\x86\xc5\xa7\xbc\xb0\xc1\xd0\x00\x71\x23\xe2\xa5\xb1\x97\x10\xb8\x8f\x63\xa1\xe1\xb6\x98\xc3\xc6\xd1\x73\x43\x17\x51\x74\x73\x94\x4f\xf3\x37\x2c\x72\xac\x35\x33\x99\xa3\xdc\x3a\x60\x04\xec\x62\xf2\x2c\xae\xa6\x37\x4e\xed\x7a\xd7\x98\xbb\x27\x2d\xcd\x2d\x96\x61\x17\xdb\xe8\x56\x75\x6b\x8f\x31\xba\x9e\x61\x70\x3e\xce\x45\x51\x67\xc1\x00\x06\x03\x38\xe0\x0a\x42\x49\xd2\xdb\xc7\xc1\xec\x0e\x44\x4e\x83\x0b\xae\xb9\x7a\x93\xd6\xf5\xa6\x4e\xa9\xb4\xcf\x48\x1a\xbe\xc5\xea\xde\x1e\x28\xbf\x05\xea\x19\x10\xe2\xce\x51\x6e\xf6\xf3\xe7\xd9\x74\x66\x7c\xcc\xc0\x04\xe3\x8a\xd6\x42\x5f\xe6\xdc\xf7\x5f\x86\xa3\xd2\xc8\xaf\x28\x46\x05\x1f\x91\xb3\xda\x96\x6f\xa4\x9a\x47\x88\x7e\x19\x1e\xca\x3c\x8f\x94\x3b\x1e\x64\x14\x5f\xf3\xcb\x1b\x25\xe7\x3e\xdf\x4b\x91\xe3\xdc\xc0\x19\xd8\xca\x88\xd5\xed\x0c\x5b\x99\x2c\x46\x1e\xda\x7f\x46\x6c\x03\x6b\x97\x2a\x81\xfe\xe8\x0c\xc2\x22\x0d\x80\x7e\xec\x8e\xbf\x44\x23\x7f\xff\xc2\x2f\x21\x03\x27\xbb\x45\x76\x29\x67\x13\xb6\x3b\xdd\x35\xba\x5d\x58\xc3\x77\x81\xff\xd5\x80\x26\x01\xa6\x41\xce\x93\xb6\x61\xb5\xee\x6b\x83\x86\xad\xae\x94\xfd\x21\xf9\xe4\xd4\xed\x03\x0e\x27\xdf\x68\x38\x1c\x8e\x5e\xd3\xc0\x51\x63\xb2\xaf\xda\x3e\x0b\xc8\x5b\xb5\xeb\x1d\xa9\xed\x38\xec\xe0\x75\x65\x5d\x5e\x40\xfc\xa0\x75\xee\x78\x77\x2c\x47\x97\xb9\x1f\xac\x9d\xc0\xd7\x72\x59\xfc\xcf\x1c\xc0\x52\xd8\x9d\xce\xdf\x97\x89\x6b\xef\xf5\xe9\xfb\x93\xb1\xbf\x8f\x9d\xd1\x08\xe2\xc2\x78\x4f\x8d\xf3\x07\x5c\xb1\x9b\x01\xda\x34\x59\xb3\x7d\xd2\x8b\x65\x74\x4a\x55\x49\x07\xcd\xad\x49\xeb\x97\x45\x62\x17\xa4\xe2\xf7\x53\x55\xf7\xb1\xeb\x79\xc5\x36\xad\x14\x7d\xc2\xd9\x6c\x78\xb3\x50\x74\x60\xb8\x5c\xf1\x4b\x1a\x20\x5e\xc8\xbd\x72\xe0\x4e\x44\x73\xe0\x18\xc0\xc9\xfb\xe3\x63\xf8\xf3\xcf\xf5\xd5\xd3\xf1\x6f\xbc\xc3\xb1\x2d\xe0\x41\xea\x55\x4c\x33\xe1\xc6\xcc\x42\x43\x8b\x3b\x19\xcd\xce\x5a\x52\x4b\x2d\xd6\x0f\x0f\x6b\x5f\xc1\xd0\x5b\x09\x54\x1d\x79\xca\xc3\x92\x02\xb3\xcc\x18\xfb\xcd\x53\xf4\xeb\x4c\x28\xc1\xfb\x2d\x04\xa2\xb4\x15\x83\x01\x08\xa5\xe9\xd5\x6d\x4e\x6d\xe8\xbe\x69\x96\x69\xde\x0d\xb2\x17\x4b\x9b\xae\x5f\x8b\x35\xcc\x8d\xa0\x7c\xd9\x32\xfc\x85\xee\x4b\x64\x3d\x0c\x7a\x03\xcf\x6d\x9d\xdc\xdf\xfb\xaa\xda\x3c\x3e\xfa\x69\xb8\x76\xd3\x52\x65\x33\x04\x30\xe0\x63\x4e\x8b\x34\x8d\xb0\xd8\xcc\x28\xff\xfb\x17\x38\xab\x1d\x11\x16\xfc\x83\x66\x54\x9b\xa9\x82\x92\xd5\x93\xc8\x61\xbc\x3c\x4c\xf2\xed\x78\x5d\xf8\x1f\xbd\x6a\x6b\x78\x6f\xaf\x56\xec\x1e\xde\x0f\xf5\xd6\x3d\xbc\x1f\x6a\x6b\x61\xe0\x3e\xa4\x01\xca\x7e\x34\x62\x88\x0d\xaa\xbb\xa0\xff\x0c\x2e\xaa\x7a\x0f\xbf\x71\xe1\xb5\xee\xc0\x46\x4a\x5f\xa7\x86\x7f\x0d\x73\xb5\x6b\x45\xb7\x8a\x9d\x32\xfb\x0f\x39\xb7\x0b\x1b\x90\x36\xf5\x9b\xe8\x93\xa0\x2c\x8d\xf1\x7c\xf8\x8a\xee\x36\x0a\xba\xef\xc1\xe3\x47\xd9\xdb\xd6\x02\xba\xc7\xa0\x8b\x1f\x8b\xa5\x1e\xd5\xb6\xb6\x38\xfa\xc9\x84\xf2\x17\x71\xea\x22\x1d\x8d\xea\x6a\xd8\xff\xf0\xb1\xfe\xb8\xd5\x9e\x39\x1b\x97\x94\x8d\xd2\x55\x55\x9f\x3d\x24\x35\x32\xca\xdd\x36\x68\x2e\x02\x9c\xc5\x54\xb8\xa1\x75\xb3\x47\x9a\x40\x1a\xf5\xde\x59\x15\x57\xad\x95\xe9\x5a\x76\x31\x55\x51\xc2\x77\x8b\xf4\xf1\xad\x61\x12\xf4\xd1\xe4\xc6\xa6\xc9\xfc\x26\x3c\x11\xd7\x87\x13\xd4\x08\x3b\xaa\x85\xd4\x66\x8a\xfa\x78\x8d\x84\x8f\xa0\x2e\x4f\xfb\x4e\xd3\x2e\xb4\xe5\xe5\x39\xb8\xe5\x17\xae\x73\x8f\x70\x0b\x4e\x12\xc3\xe3\xe1\xeb\x31\x70\xb1\x7a\x9c\x47\x98\x57\xc3\x21\x58\x5a\x31\xa8\xfe\xf6\x5d\xb3\x94\x3e\xd1\xe8\x75\xb9\xde\x66\xf3\x83\xee\x17\x35\x3b\xa5\xca\x32\xa4\x30\xa2\xaa\x0b\xc7\x3d\x6b\x54\xd6\x0d\x2e\x92\x49\xdf\xa3\x6a\x7e\x61\xf9\x92\x64\x83\xa6\xab\x9e\x6d\xf3\xd5\x8e\xca\xb8\x25\x47\xe9\xc3\xc1\xc7\x90\x45\x68\x5e\xfd\xa3\x12\x1b\x5c\xf4\x0e\x7d\x9b\x63\x5b\x42\x6e\x2c\xbf\x3f\x61\x43\xf6\x6e\x3c\x3e\x83\x99\xdd\xe3\xeb\x40\x1a\x2a\xb7\xdf\xfa\xe8\x10\x8e\x4c\x45\xe3\xbb\x83\x83\xea\xf2\xd2\x49\x45\xe8\x18\x4c\x7a\x19\xc7\x42\xa3\xb6\x2f\x0e\x5e\x00\x2a\x57\x48\x6c\xf3\xe0\xec\x74\x34\xa6\xa5\x03\x02\x99\x44\x09\x7f\xa8\xeb\xc2\xdf\xed\x42\x54\xdc\x32\x36\x52\x53\x36\x56\x5c\x3b\xf7\x59\xa5\x5a\xd1\x46\x1f\x39\xc2\xa6\xc6\xf5\x8c\xce\x57\x84\xd7\x16\xe2\x5c\xe8\x85\x2c\xb4\xf8\x55\x65\x86\x66\x7e\x0c\x6e\xb7\xee\xc2\x79\x65\x1b\x07\x15\xfe\x6c\x07\x6e\xf4\x8d\x47\x0a\x78\xb6\x2d\xb8\x0e\x19\xf3\x9d\xc0\xd8\x52\x3e\xa3\x52\x57\xb8\xd4\x27\xd2\xbc\x41\xb7\x50\xe6\x2d\xbd\x58\xf6\x21\x93\x2a\xa8\xed\x27\x7b\x64\x16\x25\x2f\xf3\xdc\x57\xe1\x2b\x99\xdc\x96\x4d\xd0\x5a\x24\x3c\xcc\xea\x55\x94\x94\xe2\x12\x1c\xa5\xf0\x37\xf6\xaa\xf1\x1a\xa3\xf8\x44\xae\x65\xd6\xf2\xb3\x62\xf9\x3a\x41\x9e\xde\x06\x31\xdd\x7d\xf2\x96\x4b\xa2\x3d\x17\xe0\x74\x71\x1e\x56\xdf\x81\x7c\xd4\xef\x99\x56\x5f\x4e\x8d\x94\xf5\xe0\x4f\x33\x90\x88\xf2\xff\x11\x50\x0b\xd3\x56\xac\x8f\xd5\xca\x63\xdb\xda\xef\x38\x76\x02\xda\xa0\x55\xe3\x1c\x3f\x50\x19\x2a\xd5\x30\xed\xac\x97\x18\xd4\xce\x11\x78\xb4\x8a\x47\x34\x52\x14\x51\x3e\x12\xea\x4a\x28\x16\x72\x8b\xae\x36\x0d\x3f\x51\x4f\xf2\xc9\x79\x99\x6c\x5c\xb8\xb1\x9f\xdc\x77\x52\xff\xaf\xd1\x61\xa3\xb7\x98\xf1\x4e\x5a\x3c\x28\xc5\xe9\x4f\x04\x4d\x3c\xcf\x38\xd2\xdd\x07\xc5\x86\xd6\x01\x6b\x56\x92\xa3\xf6\xf9\xdf\x01\x00\x00\xff\xff\xbd\x82\x2b\x5b\xf4\x23\x00\x00")

func templatesSearcherTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSearcherTmpl,
		"templates/searcher.tmpl",
	)
}

func templatesSearcherTmpl() (*asset, error) {
	bytes, err := templatesSearcherTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/searcher.tmpl", size: 9204, mode: os.FileMode(420), modTime: time.Unix(1469556350, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSearcher_enumsTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x55\x4d\x8f\xe3\x36\x0c\x3d\xdb\xbf\x82\x48\xb1\x58\x7b\x91\xc6\xf7\x01\xe6\x30\xdd\x18\x8b\x01\xd2\x04\x4d\xb2\xe8\xa1\x28\x10\xd9\x66\x6c\x21\x8e\xe4\x48\xf2\x4e\x07\xc5\xfc\xf7\x8a\x92\x3f\x33\xd3\x5e\xea\x93\xc5\xf7\x48\x51\xd4\x23\xd5\xb0\xfc\xc2\x4a\x04\x8d\x4c\xe5\x55\x18\x26\x09\x7c\x4b\xb7\xe9\xfe\xe9\x98\xae\xe1\xeb\x6e\x9d\x2e\x21\x5d\x3f\x1f\x0f\xf0\xfb\xf3\x66\x03\xbf\xa4\xb0\xd9\x1d\x8e\x96\x45\xc4\x56\x73\x51\x42\x65\x4c\xf3\x90\x24\x25\x37\x55\x9b\xad\x72\x79\x4d\x32\xc5\x99\xd0\x86\xa9\x0b\x26\xa5\xfc\x39\xc3\x12\x4d\x52\xa2\x40\xc5\x8c\x54\x89\xdf\x0a\x95\xdb\x6c\xd7\x78\x2b\x70\x0d\x4c\x80\xec\x97\x46\x42\x86\x76\x07\x2c\x80\x0b\x60\x70\x70\x4e\x7b\xbc\xb5\xa8\x0d\x9c\x79\x6d\x6c\x00\xf3\xda\xe0\x24\x82\x30\x2e\xe4\x57\x49\x9b\x0b\x43\x01\x0b\x30\x15\x72\x05\xda\x28\xca\x35\x97\xad\xb0\x8e\x0d\x53\x16\x8d\xfa\xe8\x87\xdf\x36\xd0\xa5\xc7\xa5\x88\xc3\x9c\x02\x40\x14\x06\xe9\x0d\x66\xdf\xb0\xd5\x23\x70\x69\x58\x18\x6c\xa5\x49\x6f\x61\xb0\xe1\x17\x74\x0b\xff\xf3\x4d\x21\xb3\xbb\x1c\x2b\x26\x66\x8b\x9d\x72\x64\xd4\xba\x07\xc7\x7f\x8f\x3d\xeb\x6d\x5b\xd7\x2e\x94\xfb\x89\xdd\x81\x7e\x65\x4a\x57\xac\x3e\xe2\x5f\x06\xf8\xb5\xa9\xf1\x8a\x74\x3a\x2a\xbc\xa6\xca\xcb\x9a\x89\x72\x25\x55\x99\x34\x97\x32\x41\x91\xcb\xc2\x1e\x36\xf9\x89\x1c\x3a\x5f\x5b\xac\x73\x2b\x72\x88\xe4\x70\x88\x78\x1a\x37\x8a\x21\xfa\xe3\xcf\xec\xd5\xe0\x12\x50\x29\x42\xff\x0e\x83\x1f\x4c\x41\xc1\x0c\xeb\xca\x17\x86\x81\x7e\xe1\x26\xaf\x40\x12\x9a\x33\x8d\x90\xde\x1e\xc2\x20\x70\xa4\x47\x58\xe0\x6d\xd1\xd9\x5d\x65\xa6\x90\x20\x43\x8f\x52\x9d\xa6\x60\x6d\xd7\x13\xcf\x7b\x58\x78\x53\xcf\x98\x94\x74\xca\x2a\x47\xf3\x07\x4c\x2a\xf0\xbf\xb0\x09\x1a\x32\x1b\x6e\x64\x96\xdf\x60\x7d\xcf\xbb\x0f\x5c\xcf\x90\x9e\xef\x6f\x76\xca\xe3\xce\x32\x39\xf5\x3d\x41\x78\xd3\xc2\x96\xbd\xc0\x33\x6b\x6b\x43\xa8\x42\xd3\x2a\x01\x82\xd7\x4b\x38\x5f\xcd\x2a\xa5\xdb\x3a\x47\x8b\xef\x82\x65\x35\x52\xdf\x5c\xfd\xb5\xc2\xe9\xd3\x8f\x13\xc9\x9b\x5a\xc9\x5e\xac\x5e\x2c\x41\xc7\x61\xf0\x16\xf6\x31\xfc\x85\x47\xb4\x5f\xbc\xa4\x88\xe1\x9b\xd3\xdb\x77\x71\xfd\x1f\x8a\x1b\xbc\x27\x9a\xfb\x32\x8a\x6e\x16\x3c\xca\xba\x24\x62\xaf\x3a\x92\x95\xd5\x1a\x3c\x3c\x76\x92\xd3\xab\xa3\xe2\xd7\xc8\x2f\xa2\xcc\xa6\x79\x5a\x9c\xe2\x51\x88\x44\xee\xa5\x48\xea\xa3\x0a\x7d\x91\xb6\x7a\xd4\x4d\xde\xea\x85\x37\x00\x5d\xcb\x7a\xcc\xe9\x6e\x80\x7c\xf7\x0e\x5e\x9b\x19\x38\x74\xb7\xc7\xa7\x62\x1b\x38\xb3\xc6\x7f\xc7\x73\x72\xf8\x88\xeb\x7b\xbf\xcb\x68\x54\xda\x98\xd7\x64\x62\xdc\xb3\xe6\x41\xef\xe7\x89\x67\x77\x4a\x1b\x58\xfd\x94\x19\x4e\x3a\x87\xfb\xe1\xf3\x91\xec\xfe\x5b\x71\x9f\x3f\xe9\xcf\x34\x86\x25\xcc\x26\x33\x09\xcf\xa8\x99\xf4\x46\xb1\xd9\x69\x5d\x70\x9a\xbb\xdd\x0b\xc0\xed\x32\x77\x43\x56\x9e\xe1\xa5\x42\x3b\xbf\xed\xaf\x02\x9b\xa6\x7d\x06\xfc\xe0\x07\x5d\xc9\xb6\x2e\xc8\xdd\x3e\x12\xac\x28\xec\x1c\x67\xce\xfb\x69\xbb\x26\xb2\xfd\xdb\xed\x29\x33\xeb\xdd\x3d\x6d\xd0\x28\x74\x91\x51\xfb\x77\x63\xdc\xb8\x9f\x6e\xc3\xdc\x7f\xb2\xef\xc6\x08\xdb\x56\xb4\x61\x6d\xa3\xee\xd4\xf4\x31\xb0\xe6\xdd\x7e\x61\x47\xf4\x3f\x01\x00\x00\xff\xff\x54\xdc\x29\x14\x43\x07\x00\x00")

func templatesSearcher_enumsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSearcher_enumsTmpl,
		"templates/searcher_enums.tmpl",
	)
}

func templatesSearcher_enumsTmpl() (*asset, error) {
	bytes, err := templatesSearcher_enumsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/searcher_enums.tmpl", size: 1859, mode: os.FileMode(420), modTime: time.Unix(1469557441, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSqlcreatorTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x93\x41\x8b\xdb\x30\x10\x85\xcf\xd6\xaf\x18\x4c\x28\x4e\x70\xad\x4b\xe9\x61\xa1\x87\xed\xc6\x5b\x02\x4b\x96\x66\xb3\x87\x52\x7a\x90\xed\xb1\xa3\xae\x2d\xa5\xb2\x4c\xb7\x18\xff\xf7\x8e\x64\x87\xdd\x50\xa7\xb4\x27\x83\xa5\xf7\xe6\x7b\x33\xa3\xa3\xc8\x9f\x44\x85\x90\x1b\x14\x16\x19\x5f\xb1\xe0\x53\xba\x4d\x77\xd7\xfb\x74\x0d\x37\xf7\xeb\x34\x86\x2f\xf7\x8f\x3b\x48\xd7\x9b\xfd\x03\x5c\xef\x52\xb8\x7d\xdc\x6f\xee\x52\xc6\x82\x0a\x15\x1a\x12\x15\x50\x1a\xdd\x40\xdf\x27\xfb\x5f\x47\xdc\x8a\x06\x87\x81\x05\x5d\x2b\x55\x05\x07\x6b\x8f\x57\x9c\x57\xd2\x1e\xba\x2c\xc9\x75\xc3\x33\x23\x85\x6a\xad\x30\x4f\xc8\x2b\xfd\x36\xc3\x0a\x2d\x9f\xac\xb4\xe1\x9e\x43\x1b\xb6\xe2\x8c\xc9\xe6\xa8\x8d\x85\x88\x05\xe1\x2b\x83\xef\x8d\x96\x46\x2b\xde\xfe\xa8\x9f\xc3\xf3\xa3\x59\xef\xc9\x31\x24\x62\x4b\x7c\x2d\x84\x13\xe9\xc6\xdb\x0f\x43\xc8\x96\x8c\x71\x7e\x1e\xe0\x66\x54\x41\x81\xa5\x54\x24\xb2\x07\x04\xa9\x2c\x9a\x52\xe4\x08\x25\x9d\xd8\x83\x6c\xe1\x84\xeb\x9c\xe7\x0d\x5e\x44\x3d\x0b\xfc\x4f\x8c\x72\xf0\x24\xc9\x99\x60\x09\x11\xdd\x7d\xff\x2e\x06\x34\x46\x9b\x25\x1b\x3c\xd5\xc3\xe7\xbb\x79\xdf\xe6\x58\x63\x83\xca\xb6\x20\xdc\xa5\x73\x94\x4b\xaa\xd6\x9a\x2e\xb7\x0e\xa5\xc8\x60\xe5\x5a\x98\xac\x3f\x4e\x95\xb6\xf8\xf3\x92\xcc\xa0\xed\x8c\x3a\x55\xca\x44\x4b\x43\x9f\xbb\xc8\xca\x4e\xe5\x7f\x31\x8a\x5e\x55\x5d\xce\xf7\x8b\xd0\xc6\x6a\xf0\xe6\x82\x49\x5f\x64\x57\x45\x36\x38\xea\xbe\x5f\xa8\xae\xb9\x95\x58\x17\x2d\x5c\x7d\x80\x1a\x15\x24\xfe\x9a\xc8\x6a\x1c\xff\x0f\x63\xba\xb1\xf5\x34\x8e\x16\x8d\xef\xd9\x99\x35\x25\xcc\xb5\x29\xe8\x18\xac\xf6\xc3\x2e\x9c\x07\x05\x1d\x23\x45\x06\x56\x17\x70\x96\xf0\x3f\x53\x75\xf9\x72\x5d\x77\x8d\xf2\xc0\x5f\xbf\xd1\x44\xe8\xa1\xd0\xdf\xa0\xef\x8d\x50\xf4\x14\x17\x32\x86\xc5\xb3\x3b\xfd\x33\x0a\xed\xee\x82\x9a\x97\x8d\xe6\x61\xec\x65\xa8\x0a\xf7\xe2\x28\xe7\xa9\x75\xd3\x2e\x24\x1b\x9f\x36\x32\x49\x91\x51\xc7\xe3\x71\xf5\x9d\xdf\x49\x0f\x13\x4b\x0c\xff\x52\x3d\x4f\x7c\xf9\x51\xdc\xf7\xb2\x84\xda\x92\x00\x5e\x86\x30\x0c\xf1\xc4\x33\x7d\xdc\x1a\xff\x0e\x00\x00\xff\xff\x0d\xa1\x76\x38\x64\x04\x00\x00")

func templatesSqlcreatorTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSqlcreatorTmpl,
		"templates/sqlCreator.tmpl",
	)
}

func templatesSqlcreatorTmpl() (*asset, error) {
	bytes, err := templatesSqlcreatorTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sqlCreator.tmpl", size: 1124, mode: os.FileMode(420), modTime: time.Unix(1468871773, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSqlupdaterTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x53\xd1\x6a\xdb\x30\x14\x7d\xb6\xbe\xe2\xce\xb0\x62\x87\x4c\x7a\x19\x7b\x08\xf4\xa1\x9d\xbd\x62\x28\x2d\x4b\x93\x87\x31\xc6\x90\xed\x6b\x47\x6b\x2c\xbb\xb2\xdc\xb5\x84\xfc\xfb\x24\xcb\xde\x12\x88\x57\x28\xdb\x93\xb1\xae\xee\x39\xe7\x9e\xa3\xdb\xf0\xec\x9e\x97\x08\x5d\x93\x73\x8d\x84\xcd\x88\x77\x15\xdf\xc4\xcb\x8b\x55\x1c\xc1\xc7\xdb\x28\x9e\xc3\x97\xdb\xf5\x12\xe2\x28\x59\xdd\xc1\xc5\x32\x86\x4f\xeb\x55\x72\x1d\x13\xe2\x95\x28\x51\x99\xa6\x1c\x0a\x55\x57\xb0\xdb\xd1\xd5\x73\x83\x37\xbc\xc2\xfd\x9e\x78\x5d\x2b\x64\x09\x1b\xad\x9b\x05\x63\xa5\xd0\x9b\x2e\xa5\x59\x5d\xb1\x54\x09\x2e\x5b\xcd\xd5\x3d\xb2\xb2\x7e\x97\x62\x89\x9a\x0d\x50\xb5\x62\x4e\x87\x22\x33\x46\x88\xa8\x9a\x5a\x69\x08\x88\xe7\x17\x95\xf6\x0d\xa5\x7f\x00\xf4\xa3\xaa\x85\xaa\x25\x6b\x1f\xb6\x4f\x3e\x01\xf0\x5f\x22\x19\xa0\x7d\x12\x12\xc2\xd8\xb1\xde\xb5\xab\x81\x68\x41\x6f\x10\x84\x34\x3f\x05\xcf\x90\x68\x73\x65\xe2\xea\x78\x07\x76\xc4\x73\x87\x81\xa3\x58\xe2\x43\x87\xad\x3e\xd5\x36\x94\x42\x40\xa5\x6a\x45\xbc\x08\xb7\xa8\xf1\xf2\x39\x89\x82\x24\xb2\x90\x1f\xde\x8f\xb5\x7d\xaf\xf2\xee\xf3\xf5\x69\xf6\xaa\xd9\x62\x85\x52\xb7\xc0\xed\x25\x48\x79\x6b\x92\x18\xed\xeb\x65\x4f\xf5\xb6\x5a\x75\x99\xb6\xb2\xf3\x14\x66\xd6\x3f\x1a\x5d\x0e\x7c\x37\xf8\x73\xaa\x4d\xa1\xee\x94\xb4\x7c\x59\x2d\x0b\x51\x76\xea\x80\xb0\xe8\x64\xf6\x97\xe6\xe0\x80\x29\x3c\xed\xa7\x91\xe3\x18\xe0\x6c\x02\x64\x97\xa7\x8b\x3c\xdd\x0f\x4a\xdd\xa1\xd5\xf2\x88\xaa\xb7\x61\xda\x6f\xe3\x2c\xe8\xba\xf7\x89\xcb\x1c\xf0\x09\xb3\x4e\x63\x0b\x42\x3b\xe1\x81\x82\xd9\x04\x69\x08\xaf\xcb\xd6\xce\x63\x06\xbe\xd3\x6a\x0e\x8f\x7c\x6b\x2a\x73\x5b\x80\xc5\xf9\xe8\x19\xbd\x42\xed\x3a\x0d\x75\x70\x76\x84\x6f\x9e\xa8\x27\x8a\xbe\xe1\xcd\x39\x48\xb1\xb5\x70\xa3\x3f\x66\x19\x68\x6c\x39\x8a\xc0\xef\xbf\x30\xec\x8f\xdd\x38\x3b\x63\x61\xe9\xa7\xcd\x58\xc0\xdb\xd6\xef\xd5\x38\x98\x20\x0c\x89\x67\x4c\xf5\xbe\x3b\x89\xe7\xa0\x68\x9e\xd2\xd8\xb8\x14\x1c\x8f\x40\x83\xaf\xdf\x7e\xbf\xfb\xdd\x3e\xa4\x94\x5a\xa5\x83\x2e\xd3\x3b\x64\xf3\xe7\x59\x8f\xd2\xd0\x06\xe4\x8e\x87\xf9\x5f\x91\xc4\xf4\xb6\x58\x7b\xba\xde\xdc\xe9\xb9\xad\x83\x49\xb4\x80\x24\x9a\xbb\x71\x5f\x8e\xc7\x11\xba\x78\xd4\x3f\xce\xe4\xd0\xa4\xff\x9b\xc8\xaf\x00\x00\x00\xff\xff\x55\x14\x71\xcc\xe4\x05\x00\x00")

func templatesSqlupdaterTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSqlupdaterTmpl,
		"templates/sqlUpdater.tmpl",
	)
}

func templatesSqlupdaterTmpl() (*asset, error) {
	bytes, err := templatesSqlupdaterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sqlUpdater.tmpl", size: 1508, mode: os.FileMode(420), modTime: time.Unix(1468871773, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUpdaterequestTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x57\x4d\x6f\xdb\x46\x10\x3d\x73\x7f\xc5\x94\x4d\x6a\xca\x50\xc9\x1e\x8a\x1e\x04\xf8\xe0\x56\x4a\xe0\x22\xb5\x51\x5b\x3e\x14\x86\x01\x2d\xc5\x95\x44\x5b\x5c\x32\xbb\x4b\xc7\x2e\xa1\xff\xde\x99\x5d\x8a\x22\x2d\x59\x76\x12\x07\xe8\x21\xb9\x44\xd2\xee\x7c\xbd\xf7\x66\x66\x5d\xf0\xe9\x2d\x9f\x0b\x28\x8b\x84\x1b\xc1\xa2\x43\xe6\xbd\x1f\x9d\x8e\xce\x8f\xc7\xa3\x21\xfc\x71\x36\x1c\xf5\xe1\x9f\xb3\xcb\x73\x18\x0d\x4f\xc6\x17\x70\x7c\x3e\x82\x77\x97\xe3\x93\x0f\x23\xc6\xbc\xb9\x90\x42\xa1\x51\x02\x33\x95\x67\x50\x55\xe1\xf8\xa1\x10\xa7\x3c\x13\xab\x15\xf3\x4a\x9d\xca\x39\x2c\x8c\x29\x06\x51\x34\x4f\xcd\xa2\x8c\xc3\x69\x9e\x45\xb1\x4a\xb9\xd4\x86\xab\x5b\x11\xcd\xf3\x9f\x63\x31\x17\x26\xaa\x5d\xe5\x2a\x72\x79\x28\x76\x18\x31\x96\x66\x45\xae\x0c\x04\xcc\xf3\x67\x99\xf1\xf1\x3f\x6d\x14\x7a\xd5\xf4\x51\xc8\x69\x9e\xe0\x97\xe8\x46\xe7\xd2\x67\x3d\xc6\xa2\xa8\x9b\xc3\xbb\x54\x2c\x13\x48\x35\x70\x98\xd9\x8f\x9f\x30\x8b\x54\x82\x59\x88\xee\x45\x40\xb7\xe5\xd4\x90\x03\xb3\xe0\xc6\x9a\xc4\x4b\x01\x26\x87\x78\x8d\x4c\xc2\x0c\xde\xdf\x19\x40\x1a\x1b\x7b\x24\xcb\xec\x00\xb1\xc8\x15\x2c\xc4\xb2\x98\x95\x4b\x29\xb4\x66\xd3\x1c\xab\x85\xa0\xaa\xde\x98\xda\x10\x06\x47\xd0\x86\xaa\xaa\x14\x97\x48\xc1\x9b\xb4\x0f\x6f\xee\xed\xe9\xa5\x8d\x49\x49\xd8\x18\x7a\xb5\x6a\xd9\xdb\x2f\xf7\x61\x9d\x7b\x55\xa5\x33\x10\x1f\xd1\x1a\x7e\x79\x74\xcd\xe5\x77\x04\x69\x6e\x78\x55\x09\x99\xd8\x60\xf6\x7f\x07\xd7\x5f\x5c\xe9\x05\x5f\x8e\xc5\x3d\x16\x9d\x15\x4b\x91\x09\x69\xb4\x25\x4d\x13\x6b\xf9\x12\x13\x0b\x73\x35\x8f\x8a\xdb\x79\xd4\x20\xfe\x23\x19\xd4\xb6\x48\xd5\xac\x94\x53\x08\xf4\x0e\x6c\x7a\xed\x08\x41\x0f\x82\xab\xeb\xf8\xc1\x88\x3e\x08\xa5\x72\xd5\x83\x8a\x79\x77\x5c\x01\xd6\xca\xc1\x51\x8b\xb2\xd2\x48\xd3\x74\x01\x9a\x4e\x5f\x04\xcd\x94\x6b\x22\x66\x37\x3e\x03\xe6\x79\xd6\xff\x11\xf8\xf6\xe7\x3f\x2f\xce\x4e\xdd\x91\x4f\xfe\x1d\x2a\x5e\x22\x66\xbc\x5c\x1a\xba\xad\x84\x29\x95\x04\x99\x2e\xfb\x80\xb2\x0b\x47\x94\xeb\x2c\xf0\x2f\xe5\x5a\x14\x99\x2b\x0a\x26\x6f\xef\x26\x40\x82\x42\x9d\x60\x59\xda\xef\x83\xee\x31\x0f\xdd\xd5\x3e\x5c\xb9\x01\xc5\xef\xf5\xc9\x23\x5b\x59\xdc\x2f\x65\xf6\x15\xc8\x37\xd6\x2d\xec\x0f\x77\x81\xdf\x09\x13\xc4\x75\x3a\x3d\x87\x3e\xc1\x8b\x98\x13\xa6\x75\x57\x85\x63\x95\x66\x81\xfb\x12\xc4\x98\xf0\xc4\x9f\xf4\x5a\x84\x18\xf5\x79\x94\x6c\xe1\x4d\xe8\x1e\x6a\x64\xe2\x29\xb2\xf6\x12\xb2\x9f\x8b\x83\xb7\xfa\x80\x5a\x31\x87\x27\xfa\x94\xc8\x31\xaa\x43\xcf\x86\x90\x61\x6c\xef\xd8\xee\x74\x87\xda\x8e\x09\x49\x3f\xe4\x33\xfb\xd9\xcd\x10\x0c\x50\x62\x6d\xf5\x18\xb9\xf8\xfb\x03\x7c\x2c\x85\x7a\xd8\xdb\x04\x2d\xef\xd8\x04\x0e\x60\x0b\xff\xab\x2b\xbd\x2e\xcc\x21\x3f\x8c\xb7\x75\xbe\x29\xde\xf7\xeb\xda\x3b\x19\xbb\x98\xe7\x02\x8b\xc2\xa9\x85\x24\xa4\x38\xc4\x70\x80\x6a\x61\x08\x87\x82\x2b\xbc\x86\xf3\x59\xd3\x9c\x23\x6b\x3b\x1d\x6d\x3d\x6d\x37\x21\xc0\x89\x81\x29\x97\x34\x40\xb5\xc0\x91\xbf\x4c\xff\xc5\x45\xc1\x65\x82\x3e\xb4\xc6\x71\x8a\xb6\xb1\x30\x9f\x84\x90\x74\xe1\x2e\x9d\x52\x1c\x0d\x24\x97\x3e\xa0\x3c\x11\x65\x8b\xf6\x7a\xcb\x60\x12\x84\x36\x6e\x0e\x63\x9b\x25\xdc\x31\x90\xbb\xd9\xbb\xa9\x4e\xe0\x9e\x0c\x49\x1a\xbf\xfd\x0a\x13\x5a\x16\x03\x3f\x4d\xfc\x09\xf3\xdc\x6d\x8d\x12\x2a\xae\xb6\x69\xbb\x46\x0b\xa1\x66\x7c\x2a\xaa\xd5\xda\xce\xad\x02\x8d\xc6\xab\x57\x9f\x9f\xa5\xda\x53\xcb\x0b\x06\xa9\x93\x55\x8a\x2a\x4d\x48\x3d\x19\xbf\x15\x01\x55\xe6\x7e\x6f\x57\x43\x3d\x4d\x5b\xea\x56\x3c\xf4\xe1\x8e\x2f\x4b\xbb\x91\x9c\xfc\x4a\x15\xae\x61\x41\x9f\x9e\xb6\x11\xe8\x18\x2f\x87\x9d\x1c\xd0\x89\x47\x9b\x07\x8f\x7f\x38\xa2\x56\xb2\x06\x9d\xe9\x89\x67\xf8\xd3\x8a\x6e\xb6\xb2\xab\x33\x0a\x74\xef\x1a\x47\x81\x8d\xcf\xec\x25\x25\x34\x76\xbc\x4b\x7e\x57\xde\xe4\xbf\xa1\x60\x00\x2d\x97\x7d\x3a\x41\x52\x07\x60\xff\x61\x11\x27\xc3\xfe\xda\xa9\xcd\x87\xf8\x5b\xe7\x1f\xb8\x40\xbd\x2e\x89\xbf\xa7\x92\xab\x87\xcf\xa2\xd1\x99\x7c\x19\x91\xce\xf6\x3b\x95\xaf\x4a\xe5\x6b\xef\x55\xa4\xf2\x70\x1f\x97\xcf\x2e\x58\x7a\xdd\xa4\x4f\x60\x80\x15\xd5\x84\xd8\x8a\x1a\x5f\x41\xdc\x87\x9f\x52\x22\x65\x9b\x93\x1a\x02\xcb\x06\x39\xb0\xf0\xd0\x0b\xef\x8a\x30\xbb\x0e\x03\x3b\xe6\xc8\x96\x22\xdf\x40\x4b\x3c\xfb\x27\xdc\x3e\x21\xa1\xf3\x35\x55\x18\xe1\x09\x21\xda\xf4\x28\x68\xb1\x63\x05\xe2\x11\x15\x72\x04\x45\xd8\x85\xac\x7e\x20\x61\xd4\xde\x33\x2a\x5c\x0b\xd0\xf3\x6e\xae\x8a\x47\x6a\x6b\x29\x1d\xc1\x64\x3b\xf6\x7b\x13\xf5\x8b\xbb\xfc\x2b\xc4\x51\xb7\xfa\x77\x79\xfc\x6f\xe5\xf1\x5e\x18\x7a\x22\x6c\x44\x51\xff\x15\x1a\x76\x1f\x14\x4d\x41\x2f\x54\x80\x75\x8b\x23\xde\xbd\x3d\xaa\x26\xb0\xa5\x65\x13\x7a\x4c\x4f\x3c\xfb\xf4\xfc\x16\x19\x34\xde\x3b\x4f\xcf\xcd\x43\x31\x6c\x2e\xd0\x4b\xb1\x49\x6a\x8d\xd8\xb7\x48\xa9\xf6\x8d\x09\xed\x56\x0b\x25\x58\x4b\xea\x85\xfb\xcf\xbe\xcd\x9f\xdb\x80\xb5\xcb\x2b\x7b\x39\xec\x3c\xca\xb7\xd6\x97\xe3\xc9\x19\xd4\xa0\x1c\x27\x89\xf3\xf6\xfa\x98\x34\xae\x03\xf7\x47\xc6\x76\x8b\xac\x6b\x7b\xdc\x53\xd8\x11\x6d\x79\x6f\x1a\xa3\x23\xfa\x17\x77\xf9\xa3\x7e\x71\x50\x6d\xc0\x59\xb1\xff\x02\x00\x00\xff\xff\xf4\x5c\x8f\xfc\x2f\x12\x00\x00")

func templatesUpdaterequestTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUpdaterequestTmpl,
		"templates/updateRequest.tmpl",
	)
}

func templatesUpdaterequestTmpl() (*asset, error) {
	bytes, err := templatesUpdaterequestTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/updateRequest.tmpl", size: 4655, mode: os.FileMode(420), modTime: time.Unix(1468871773, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/ginCreator.tmpl": templatesGincreatorTmpl,
	"templates/ginUpdater.tmpl": templatesGinupdaterTmpl,
	"templates/searcher.tmpl": templatesSearcherTmpl,
	"templates/searcher_enums.tmpl": templatesSearcher_enumsTmpl,
	"templates/sqlCreator.tmpl": templatesSqlcreatorTmpl,
	"templates/sqlUpdater.tmpl": templatesSqlupdaterTmpl,
	"templates/updateRequest.tmpl": templatesUpdaterequestTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"ginCreator.tmpl": &bintree{templatesGincreatorTmpl, map[string]*bintree{}},
		"ginUpdater.tmpl": &bintree{templatesGinupdaterTmpl, map[string]*bintree{}},
		"searcher.tmpl": &bintree{templatesSearcherTmpl, map[string]*bintree{}},
		"searcher_enums.tmpl": &bintree{templatesSearcher_enumsTmpl, map[string]*bintree{}},
		"sqlCreator.tmpl": &bintree{templatesSqlcreatorTmpl, map[string]*bintree{}},
		"sqlUpdater.tmpl": &bintree{templatesSqlupdaterTmpl, map[string]*bintree{}},
		"updateRequest.tmpl": &bintree{templatesUpdaterequestTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

