// Code generated by go-bindata.
// sources:
// templates/ginCreator.tmpl
// templates/ginUpdater.tmpl
// templates/searchRequest.tmpl
// templates/searchRequestEnums.tmpl
// templates/sqlCreator.tmpl
// templates/sqlUpdater.tmpl
// templates/updateRequest.tmpl
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesGincreatorTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x91\x41\x6f\x9b\x40\x10\x85\xcf\xec\xaf\x98\x72\xa8\xc0\x72\x76\xa3\x4a\xbd\x58\xca\x21\xb1\x49\xeb\x2a\xb2\x5b\x1b\x1f\x7a\x5c\x60\x0c\xdb\xc0\xae\x3b\x2c\x4d\x2a\x8b\xff\xde\x5d\xa0\x55\x9c\x4a\xbd\xf5\x36\x62\xde\x3c\xbe\xf7\xf6\x24\xf3\x47\x59\x22\xe4\x84\xd2\x22\x13\x33\x16\x7c\x48\x36\xc9\xee\x36\x4d\x56\xb0\xdc\xae\x92\x39\x7c\xdd\x1e\x76\x90\xac\xd6\xe9\x1e\x6e\x77\x09\xdc\x1f\xd2\xf5\x43\xc2\x58\x50\xa2\x46\x72\x47\x05\x1c\xc9\x34\x70\x3e\xf3\xf4\xe7\x09\x37\xb2\xc1\xbe\x67\x41\xd7\x2a\x5d\x42\x65\xed\x69\x21\x44\xa9\x6c\xd5\x65\x3c\x37\x8d\xc8\x48\x49\xdd\x5a\x49\x8f\x28\x4a\x73\x95\x61\x89\x56\x4c\x56\x86\xc4\xc0\x61\x88\xcd\x04\x63\xaa\x39\x19\xb2\x10\x31\x80\xf0\x85\x43\xa9\xf4\x55\x69\xb4\xca\xfd\x14\xbe\x5a\x7e\x6b\x8c\x22\xa3\x45\xfb\xbd\x7e\x0e\x99\x5b\x5a\xc7\xd4\x42\x38\xd1\xad\x07\xcb\xbe\x0f\x59\xcc\x98\x10\xb0\xc1\xa7\x0b\xee\xe5\x50\xc3\x47\xa9\x8b\x1a\x09\x9e\x54\x5d\x03\xa1\xed\x48\x83\x84\x6a\xfa\x7a\x34\x74\x19\x76\x2a\xaf\xe5\xce\xd1\x9b\xa6\x15\xfe\x11\xcb\xb6\xed\x1a\x07\x60\x2b\x69\x9d\xc7\xe5\xdd\xe0\x9f\x21\x7c\x3e\xa4\x30\xf6\xf5\x69\xbf\xdd\x70\x76\xec\x74\xfe\x6f\xb4\xa8\xc8\x60\xe6\x33\xf2\xd5\x5d\x0c\xae\x07\x3e\x2d\xee\xfd\xe9\x99\x05\x13\xb5\x77\x8a\x72\x98\x79\xc5\xd2\x68\x8b\xcf\x36\xf6\xeb\xe0\x87\x24\xb0\x63\x39\xfc\xd5\xcb\x05\x48\x04\x8b\x1b\xc8\xf9\x9d\xd2\x85\x27\x8a\xde\x5a\x57\x57\x10\xa8\x23\xf8\xdd\x9b\x1b\xd0\xaa\x1e\x6c\x82\x9c\x0f\x82\xf7\xd7\xd7\xf3\x11\xe3\x1c\x3a\x89\xa1\x70\xe1\xa5\x3c\xf1\x73\x14\xf7\xb1\xd7\x8e\x4c\x6e\xea\x07\xb3\x62\x0e\xd3\x9f\x5c\xd4\xfd\x97\x87\xbf\xd3\x1a\x9f\x33\xe6\x63\xf2\xe8\x3f\x30\x4c\x97\xef\x5e\x5c\xaa\x22\x5c\xa8\x62\x10\xff\xd6\xf6\xac\x67\xbf\x02\x00\x00\xff\xff\xdc\x4b\xf0\x22\x28\x03\x00\x00")

func templatesGincreatorTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGincreatorTmpl,
		"templates/ginCreator.tmpl",
	)
}

func templatesGincreatorTmpl() (*asset, error) {
	bytes, err := templatesGincreatorTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/ginCreator.tmpl", size: 808, mode: os.FileMode(420), modTime: time.Unix(1468871773, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGinupdaterTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x92\xc1\x6f\x9b\x30\x14\xc6\xcf\xf8\xaf\x78\xe3\x30\x41\xd4\xda\xd5\xa4\x5d\x22\xe5\x90\x26\x74\xed\x54\x25\x5b\x42\x0e\x3b\x1a\x78\x01\x2f\x60\x53\x63\xaf\x9d\x22\xfe\xf7\xd9\xc0\xa6\x6e\xaa\x72\xdb\x05\x3d\xf1\xbe\xdf\xf7\xbe\xf7\xe4\x96\xe7\x27\x5e\x22\xd8\xb6\xe0\x06\x09\x9b\x91\xe0\x53\xb2\x49\x76\xcb\x34\x59\xc3\x6a\xbb\x4e\xae\xe0\xdb\xf6\xb0\x83\x64\xfd\x90\xee\x61\xb9\x4b\xe0\xee\x90\x3e\x3c\x26\x84\x04\x25\x4a\xd4\x0e\x2a\xe0\xa8\x55\x03\xe7\x33\x4d\x7f\xb6\xb8\xe1\x0d\xf6\x3d\x09\x6c\x27\x64\x09\x95\x31\xed\x9c\xb1\x52\x98\xca\x66\x34\x57\x0d\xcb\xb4\xe0\xb2\x33\x5c\x9f\x90\x95\xea\x3a\xc3\x12\x0d\x9b\xac\x94\x66\x63\x0e\x4d\x66\x8c\x10\xd1\xb4\x4a\x1b\x88\x08\x40\xf8\xca\xa1\x14\xf2\xba\x54\x52\xe4\xbe\x0a\xff\x69\x7e\x6f\x94\xd0\x4a\xb2\xee\xa9\x7e\x09\x49\x4c\x08\x63\xb0\xc1\xe7\xbf\xc2\x1d\x86\x19\xf7\x5c\x16\x35\x6a\x78\x16\x75\x0d\x1a\x8d\xd5\x12\x38\x54\xd3\xdf\xa3\xd2\xf0\x06\xb4\xc3\x27\x8b\x9d\xe9\xa8\xf3\xf5\xd6\x69\x85\x7f\x10\xde\x75\xb6\xc1\x0e\x4c\xc5\x8d\xfb\xe0\x05\x7e\x1c\x9a\x21\x7c\x59\xa6\xab\x7b\x77\xc1\xe1\x5a\xde\xf0\xf3\x7e\xbb\xa1\xe4\x68\x65\x7e\x39\x76\x54\x64\x30\xf3\x4b\xd2\xf5\x6d\x0c\xee\x10\x74\x6a\xdc\x79\xf4\x4c\x82\x69\x23\xef\x14\xe5\x30\xf3\x8a\x95\x92\x06\x5f\x4c\xec\xdb\xc1\x0f\xae\xc1\x5e\xda\xd1\x69\x50\x6b\x98\x2f\x20\xa7\xb7\x42\x16\x3e\x59\xf4\xde\x6a\x77\xd3\x20\x10\x47\xf0\xcd\x77\x0b\x90\xa2\x1e\xfc\x82\x9c\x0e\x8a\x8f\x37\x37\x57\x63\x9e\x73\xe8\x24\x4a\x87\x73\x2f\xa5\x89\xaf\xa3\xb8\x8f\xbd\x76\x0c\xe7\xaa\x9e\x4c\x63\x16\x7e\xdd\xfd\xd7\xc7\x37\xf2\xf8\x5d\x63\x3a\xd6\xd1\xff\x98\x3f\x91\x1f\x5e\x91\xee\x81\x1a\xdb\x39\x34\x54\xa7\x70\x60\x7e\x23\x3d\xe9\xc9\xaf\x00\x00\x00\xff\xff\xd6\x42\x09\x81\x35\x03\x00\x00")

func templatesGinupdaterTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGinupdaterTmpl,
		"templates/ginUpdater.tmpl",
	)
}

func templatesGinupdaterTmpl() (*asset, error) {
	bytes, err := templatesGinupdaterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/ginUpdater.tmpl", size: 821, mode: os.FileMode(420), modTime: time.Unix(1468871773, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSearchrequestTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x1a\x6b\x73\xdb\xc6\xf1\xb3\xf8\x2b\x36\x68\x62\x03\x0a\x0b\x6a\x52\x37\x1f\x38\x61\x3a\xb6\x44\xd9\x6a\x14\x4a\x11\xe9\xfa\x83\xc7\x53\x81\xc0\x81\x44\x0c\xe2\xa8\x3b\x50\x8f\x30\xfa\xef\xdd\xdd\x3b\xbc\x28\x88\xa1\x54\x37\x33\xf5\x68\x86\xc0\xdd\xbe\x77\x6f\x1f\x07\x2f\x83\xf0\x73\x30\x13\xb0\x5e\xfb\xe7\xe6\x71\x14\x2c\xc4\xfd\x7d\xa7\xd3\xeb\xc1\xdb\xe1\x68\x78\xf1\x7a\x32\x3c\x82\xc3\xb3\xa3\x61\x17\x86\x47\x27\x93\x31\x7c\x38\x39\x3d\x85\x37\x43\x38\x3d\x1b\x4f\x10\x8a\x00\x67\x22\x13\x2a\xc8\x45\x04\xb1\x92\x0b\x22\x36\xb9\x5b\x5a\x4a\x90\x64\xc5\xc2\xc9\x62\x29\x55\x8e\xc4\x11\x65\xa5\x93\x6c\x06\xf3\x3c\x5f\xf6\x7b\xbd\x59\x92\xcf\x57\x53\x3f\x94\x8b\xde\x54\x25\x41\xa6\xf3\x40\x7d\x16\xbd\x99\xfc\xeb\x54\xcc\x44\xde\xb3\xf4\xa5\xea\x69\x11\xa8\x70\x2e\x54\xa7\x93\x30\x31\x70\x3b\x7b\x4e\x14\xe4\xc1\x34\xd0\xa2\xa7\xaf\x52\x07\xdf\x45\x16\xca\x08\xc9\xf7\x7e\xd5\x32\xa3\x85\x78\x91\xd3\x4f\x22\x7b\x89\x5c\xe5\x09\x03\x65\x48\x97\xd8\xd3\xb3\xce\x15\x82\x6b\xa7\x83\xcf\x35\x59\x7e\x5d\xc8\x44\xc9\x8c\xc8\xde\xd2\x9e\xbe\x82\xfa\x76\x1a\x64\xb4\xb7\x4a\x94\x12\x48\xd2\x63\x9b\x35\x74\x1f\xb3\xb4\x17\xe2\x6a\x25\x74\x0e\x89\x86\x00\xb4\x40\x05\xd3\xe4\xb7\x60\x9a\x0a\x68\xee\xc7\x52\x35\xd1\xfd\x4e\x8e\xcf\xdb\x48\xa2\xe0\xab\x30\x87\x75\x67\xef\x38\x11\x69\xa4\xe1\xe3\xa7\x06\x34\xaf\xc2\x25\xd9\xa1\xef\xc4\x0c\xe2\x5c\x12\x70\x9a\x0b\xd5\x02\x4d\xcb\x15\x38\x03\x11\xfc\x99\x8a\x84\x7a\x73\x07\xfb\x0d\xf0\x62\xd5\xc2\x4b\xf3\x4a\xf0\xa7\xc9\x22\x41\x7d\xb3\xbc\xd8\x4b\x69\x81\x29\xc5\xb1\x16\x8d\x2d\xc9\x2b\xb8\x77\xff\xd0\x7e\x46\x7c\xb6\x1b\x0b\x0f\x37\x68\x7d\x8c\xa7\x7c\xbe\x61\x15\x6b\x08\x22\x90\xcf\x03\x63\x6a\x32\x70\x2e\x61\x2a\xc0\x68\x82\xd1\x29\xb3\x2e\x68\x8c\x1a\xfb\x88\xf6\x56\x22\x5f\xa9\x4c\x44\x6d\xa6\xb6\xdc\xb3\x9c\x05\x3b\x0e\x56\xb7\x20\xb2\xd5\xe2\x65\xc4\x9e\x9a\x8b\x74\x19\xaf\xd2\x4c\x68\xdd\x09\x25\x86\x2c\xb8\xeb\xf5\xd7\xb9\xc5\x86\xfe\x00\x6a\xa4\x3a\xeb\xb5\x0a\x32\x3c\x67\x5f\x27\x5d\xf8\xfa\x96\x77\x8d\x27\x49\x4c\xe3\xbb\xfb\xfb\x1a\x3e\xbf\xdc\xfa\x56\xbb\xf5\x3a\x89\x41\x5c\x21\x36\x1c\x6c\x80\x19\x21\x07\x90\xc8\x3c\x58\xaf\x45\x16\x31\x33\xfe\xc5\x80\x24\xc1\xff\x39\x3e\x1b\x41\x46\x32\xb1\x98\x41\x96\x7f\x31\x81\xc3\xba\x90\xe6\x10\xa1\x28\x0e\xaf\x12\x5b\xb3\xe3\xd4\x04\x42\x79\x8e\xa6\x8c\xce\x4c\x8d\xf9\x35\x3b\x94\x45\x94\x31\x3f\x1b\x6f\xa3\xf7\x56\x5a\x80\x75\xf8\xf8\x97\x53\xc0\xa8\x57\x77\x9d\x78\x95\x85\xe0\xea\x16\x6f\x79\x75\xea\xae\x57\xc8\x84\xe7\x43\x63\xe8\x84\x73\xd0\xf4\xbc\x9b\x6e\x98\x50\xe0\x31\x8f\xf4\x3b\x7b\x7b\x46\x76\xab\xed\xd1\xb4\xd0\x75\xaf\xf0\xc2\x1e\xfe\x15\x30\x8e\x8d\xee\x9f\x03\xa5\xe7\x41\x3a\x11\xb7\x18\xa3\x8b\x65\x2a\x16\x02\xdd\xc1\x69\x50\x53\x1e\x94\x98\x53\x66\xbe\x54\xb3\xde\xf2\xf3\xac\x57\xe6\xb1\xbf\x10\x82\xc5\xc5\xdc\xb7\x4d\xff\x1a\x07\xd4\xdf\xfd\xf8\x69\x7a\x97\x8b\x2e\x08\xa5\xa4\xf2\x48\xf9\xeb\x40\x01\x25\x4c\x6b\x9b\xce\xff\xc2\x34\x4c\x7f\x00\xf5\xf0\xa8\xd9\x25\x12\x71\xb0\x4a\xf3\x9a\x0d\xb3\x24\xed\x02\x26\x69\x7f\x48\x62\xc6\xae\xf3\x3e\x2b\x8e\xef\xc2\xe8\x03\x97\xdf\x5c\x5f\x72\x24\xe0\x89\x46\x8d\xb4\x83\x27\xd9\xab\xdb\xd8\x68\xea\x12\x6b\xaf\x4b\x14\xad\xc9\xdf\x67\x8b\xff\xc2\xe8\x25\x76\xcd\xec\xfb\x6d\x76\x6f\xb0\x71\xa7\x56\x1c\xcf\x18\x9e\x03\x30\x57\x64\x4e\x5b\x6a\xfc\x89\x4a\x16\xae\x79\x71\xa7\x28\xf0\xa5\x73\xe9\xd5\x7c\x91\xab\xa7\x79\x23\xdc\xf0\xc0\xbe\x46\xfb\x3f\xe6\xa2\xad\xbe\xd8\xee\x86\x97\xdf\xe8\x97\x94\x12\x25\x3c\x92\x2f\xc9\x2f\xb9\x6a\x78\xa6\xf2\x45\x5b\xb5\xb1\xd9\x9d\x9f\xf5\x52\x84\x49\x9c\x84\xc4\xb1\x01\xdb\x9a\x9d\x0d\x4a\xb3\x02\xb6\x65\xf0\x7a\xf9\xa3\x1a\xf4\xaf\x20\x5d\x51\x56\x41\xf4\x38\x08\xc5\xfa\xbe\x80\xb8\xa6\x0d\xae\x52\x4b\xd3\x6e\x40\xf9\x50\x14\x2b\xfb\x4e\x40\x87\x32\x8b\x92\x3c\x91\x19\x54\x4f\x16\x2c\x2c\x16\xda\xcb\x5a\x51\x38\x4d\x43\x40\x5d\x4c\x94\x28\x11\xe6\xc9\xb5\x28\xcb\xd7\x53\x4c\x51\xd0\x7b\x86\x2d\x4e\xf4\x91\xd0\x21\x06\x03\xa5\xc9\xa9\x94\x69\x01\x91\xd4\x36\x4a\x2d\x5e\x47\x51\xdd\x6b\x54\x02\xf1\x79\x21\xf2\xb9\xe4\x6c\x1d\x44\x51\xe5\x4c\x7a\x6f\x76\x38\x3e\x00\x4a\x69\x43\xae\x6b\x8a\x35\xa6\xfc\xc2\xc6\x48\x73\xf8\x0b\x04\x59\xc4\xcb\xa5\x0d\x69\xfd\xf5\xe8\x08\x91\x4f\x62\xb8\x93\x2b\xb8\xc1\x12\x46\xd4\xe5\x35\x1e\xae\x24\x32\x36\xeb\xdb\x56\x14\x28\xbf\x69\xd5\x64\xcc\x1b\x5a\xf9\xa5\xfc\x2e\xba\x28\x45\x37\x76\xc1\xc1\xbe\x00\x7f\xe8\x6c\xbb\xf1\x83\xa3\x4d\xb0\xde\x9a\xd1\x01\x62\xbf\x0c\x87\x01\xbc\x9d\x94\xab\x95\xfb\x07\x70\x76\xc1\xcb\x58\xea\x8c\x38\xa4\x0d\xca\xfc\x52\x09\x08\xd2\x14\xbb\xbf\xdc\x2f\xf2\x88\xda\xe0\xd6\x90\xd8\xab\x6c\xed\xc6\x8f\x38\xb3\x0b\xd7\x9b\x91\xdc\x85\x30\x9e\x81\xef\xfb\xdb\xf4\xf1\xb6\x31\xa6\xe8\x89\x29\xd3\xb4\x60\xe2\x96\x89\xac\xbe\x29\xd0\x5d\x7c\x2f\x4c\xd2\x07\x18\x5e\xd1\x42\x69\x8d\x3e\xbc\xce\x18\x84\xcf\x5b\x1f\xd8\x58\x98\x5c\xc6\x4b\x4c\x7a\xb9\xcb\xb2\x7b\x5d\x4a\x14\xc8\x11\x6d\xfa\x6f\x14\x9e\x18\x9b\x94\x47\x7a\x10\xbf\xd0\x7d\x11\x7b\x06\x08\x1d\x58\x34\xae\x03\x08\x96\x4b\x0c\x4e\xb7\x5a\x43\x1f\x52\x02\xb5\x39\x47\xab\x7a\xc8\x72\x6b\x8c\xc1\xa9\x8d\xdc\x9a\xa2\x87\x62\x4c\x8b\x14\x8f\x1d\x46\xd6\xbb\x46\x24\x93\x34\x98\x63\xb1\xda\x4c\x57\x49\xca\x47\x23\xd8\xde\xdb\x3f\xc9\xa9\x24\x81\x6b\x05\x41\x57\xb5\x55\x93\x3f\x70\x10\x6b\xcd\xf8\x4d\x43\xd0\x52\xd7\xea\x88\x94\xdb\xec\x31\x16\xb9\xe9\xce\x31\x14\x4d\xdf\xc5\xaf\x3b\xd9\x60\x8b\x01\x76\xd4\xbf\xe0\xee\xa6\xc5\x84\xb0\x8b\xae\x46\xe0\x01\x30\x52\xbb\x4e\x76\xae\x28\x95\x32\xef\x7f\x9e\x56\x86\x9f\x2b\xcb\xf1\x66\x17\xbd\xac\xd0\x03\x30\x68\xed\x9a\x9d\xd3\x78\xbe\xa1\x17\xa7\x15\x63\x15\x9a\x7b\x69\x9a\xe1\xdd\x25\xc1\xe2\x88\x32\x45\x8d\x09\x84\xdf\x75\xf2\x9b\xd8\x35\x3e\x2d\x3f\x97\x10\x47\x4c\xa7\xcb\x44\xc6\x48\x63\x27\xad\x4a\x05\x7c\x3c\xbb\x95\x5d\x2a\x7a\xb0\x5f\x12\xf4\x2c\x8c\x89\x88\x72\xb5\xe6\xd4\xa2\xae\x95\xda\xd3\x02\xd6\x90\xdd\xfc\xfa\x5c\x57\x1a\xae\x5b\xd2\x6e\xb2\x59\x34\x77\x72\xb6\x55\x66\x00\x2f\xda\x8a\x77\x2d\xb7\xda\x7f\x65\x8a\xad\xd7\xe8\x7e\x83\xb9\xcd\x9e\x9b\x51\xf3\xd6\x5e\xc7\x8c\x39\xbd\xd1\xdc\x74\x93\x60\xf1\x29\x6e\x69\x30\x34\x40\xdc\x8a\x70\x95\x9b\x4b\x08\xdc\xc7\xb1\x30\xe7\xb6\x98\xc3\xc6\xd2\xb3\x43\x17\x51\xb4\x73\x94\x4b\xf3\x37\x2c\x53\xac\x35\x73\x99\xa2\xdc\xda\x63\x04\xec\x62\xd2\x24\x2c\xa7\x37\x4e\xed\x7a\xd7\x98\x7b\x20\x2d\xcd\x2d\x86\x61\x17\xdb\xe8\x46\x75\x6b\x8e\x31\xba\x9a\x61\x70\x3e\x4e\x45\x56\x65\x41\x0f\x06\x03\x38\xe0\x0a\x42\x49\xd2\xd9\xc7\xc1\xec\x1e\x44\x4a\x83\x0b\xae\xd9\x7a\x13\x57\xf5\xa6\x4a\xa9\xb4\xcf\x48\x1a\xbe\xc5\xea\xde\x1c\x28\xbf\x05\xea\x19\x10\xe2\xde\x52\xae\xf7\xf3\x17\xc9\x6c\x9e\xbb\x98\x81\x09\xc6\x16\xad\xa5\xbe\x4a\xb9\xef\xbf\xf2\xc7\x85\x91\xdf\x50\x8c\x0a\x3e\x22\xe7\x95\x2d\x8f\xa5\x5a\x04\x88\x7e\xe5\x1f\xc9\x34\x0d\x94\x3d\x1e\x64\x14\x57\xf3\xcb\xb1\x92\x0b\xd7\x21\x5b\x92\xe3\xec\xc0\xe9\x99\xca\x88\xd5\xed\x1c\x5b\x99\x24\x44\x1e\xda\x7d\x41\x6c\x3d\x63\x97\x32\x81\xfe\x68\x0d\xc2\x22\x0d\x80\x7e\xcc\x8e\xbb\x42\x23\x7f\xff\xca\x2d\x20\x3d\x2b\xbb\x41\xb6\x29\xa7\x0d\xdb\x9e\xee\x0a\xdd\x2c\x6c\xe0\xdb\xc0\xff\x6a\x40\x93\x00\xd3\x20\xe7\x49\xd3\xb0\x1a\xf7\x35\x41\xfd\x46\x57\xca\xfe\x90\x7c\x72\xaa\xf6\x01\x87\x93\x6f\x34\x1c\x0d\xc7\x87\x34\x70\x54\x98\xec\xab\xa6\xcf\x3c\xf2\x56\xe5\x7a\x4b\x6a\x3b\x0e\x3b\x78\x53\x59\x9b\x17\x10\xdf\x6b\x9c\x3b\xde\x9d\xc8\xf1\x55\xea\x7a\x1b\x27\xf0\x50\xae\xb2\xff\x9b\x03\x58\x08\xbb\xd3\xf9\xfb\x32\x71\xed\x1c\x9e\xbd\x1f\x4d\xdc\x7d\xec\x8c\xc6\x10\x66\xb9\xf3\xdc\x38\x7f\xc4\x15\xbb\x19\xa0\x49\x93\x35\xdb\x27\xbd\x58\x46\xab\x54\x99\x74\xd0\xdc\x9a\xb4\xc6\xe6\xd6\x2c\x48\xc5\xef\x67\xaa\xea\x63\x37\xf3\x8a\x69\x5a\x29\xfa\x84\xb5\xd9\xf0\x76\xa9\xe8\xc0\x70\xb9\xe2\x97\xd8\x43\x3c\x9f\x7b\x65\xcf\x9e\x88\xfa\xc0\x31\x80\x13\x3d\x5a\x61\x10\xfd\xfe\xfb\xc6\xfa\x48\xe6\xbc\xc1\xc1\x2d\xe0\x51\xf2\x65\x50\x33\xe5\xda\xd0\x82\x53\x8b\xb2\x47\xa3\xde\x5a\x4b\xea\xa9\xc5\xe6\xe9\x61\xf5\x4b\x18\x7a\x2b\x80\xca\x33\x4f\x89\x58\x52\x64\x16\x29\x63\xbf\x7e\x8c\x3e\xcc\x85\x12\xbc\xdf\x40\x20\x4a\x5b\x31\x18\x80\x50\xea\x6e\xdd\xe6\xd5\x9a\xee\x6d\xc3\x4c\xfd\x72\x90\xdd\x58\x98\x74\xf3\x5e\xac\x66\x6d\x04\xe5\xdb\x96\xe1\x15\x5d\x98\xc8\x6a\x1a\x74\x06\x8e\xdd\x42\x6f\x3c\xdc\xfd\xaa\xdc\x3e\x4d\x3e\x8b\x8d\xcb\x96\x32\xa1\x21\x40\x0e\x2e\xa6\xb5\x40\xd3\x14\x8b\xfd\x8c\x72\xbf\x7f\x85\xe3\xda\xc9\xe9\xc9\x4f\x43\xf8\x07\x8d\xa9\x26\x59\x79\x15\xb3\x67\x11\x1c\x9d\x4d\x1e\x27\xfa\x56\x09\x3c\x07\x6a\x32\x0f\xb2\x4d\x3d\x7e\x74\x1e\xc2\x9c\xa9\x87\xfa\xfe\x58\xe9\x2b\xb4\x6e\xa7\xf5\xc3\x43\x90\x36\x52\x3f\x94\xa4\x4c\xfc\x3f\xa6\x2b\x6a\x79\x32\x86\xd1\xfb\xd3\xd3\x56\x33\xed\x80\x8a\x36\x79\x80\x5e\xbb\x1e\xdb\xf4\x76\xad\x00\x6c\x52\xc3\xbf\x9a\x5d\x9b\x95\xa5\x5b\x06\x5a\x51\x2b\x86\x5c\x09\x84\x89\x5e\x53\x28\xf2\xe0\xb3\xa0\x9c\x8e\xc1\x7f\xf4\x86\x6e\x42\x32\xba\x1d\xc2\xb3\x4a\xb9\xde\x54\x0e\xba\xf5\xa0\x6b\x22\x83\xa5\x9e\xd4\xe4\x36\x38\xba\xd1\x94\xb2\x1d\x71\xea\x22\x1d\x8d\xea\x6a\xd8\xdf\xf8\x32\x54\xbb\xc7\xac\x55\xb7\xb2\x40\xed\x21\xfe\x38\x57\xf6\x42\x42\x73\x9d\xe0\x44\xa7\xfc\x96\xee\xce\x1c\x7a\x02\xa9\xb5\x04\xd6\x94\xb8\x6a\x4c\x4b\x37\xb7\xcb\x99\x0a\x22\xbe\x7e\xa4\x2f\x70\x35\x3b\xa0\x63\xa6\xb7\x26\x93\xa6\xb7\xfe\x48\xdc\x1c\x4d\x51\x0d\x6c\xba\x96\x52\xe7\x33\x54\xc2\xa9\xd5\x04\x04\xb5\xa9\xdc\xb5\xea\x75\xa1\x29\x2f\x8f\xca\x0d\x67\x70\x29\x7c\x82\x2f\x70\xd8\x18\x9e\x0e\x0f\x27\xc0\xf5\xec\x69\x6e\x60\x5e\x35\x2f\x60\xf5\xc5\x48\xfa\xdb\x77\xf5\x6a\xfb\x4c\xa3\x57\x15\x7d\x9b\xcd\x0f\xba\x5f\xd4\xec\x94\x4c\x8b\x38\xfa\xf8\xa9\xba\x93\xdc\x33\x46\x65\xdd\xe0\x32\x9a\xf6\x1d\x2a\xf8\x97\x86\x2f\x49\x36\xa8\xbb\xea\xc5\x36\x5f\xed\xa8\x8c\x5d\xb2\x94\x3e\x1e\x7c\xf2\x59\x84\xfa\xd7\x01\x54\xa2\xc5\x45\xef\xd0\xb7\x29\x76\x2e\xe4\xc6\xe2\x13\x15\xf6\x6c\xef\x26\x93\x73\x98\x9b\x3d\xbe\x31\xa4\xb9\x73\xfb\xc5\x90\xf6\xe1\x24\x2f\x69\x7c\x77\x70\x50\xde\x6f\x5a\xa9\x08\x1d\x83\x49\xaf\xc2\x10\xf3\x60\x17\x5e\x1d\xbc\x02\x54\x2e\x93\xd8\x09\xc2\xf9\xd9\x78\x42\x4b\x07\x04\x32\x0d\x22\xfe\x96\xd7\x85\xbf\x9b\x85\x20\xbb\x63\x6c\xa4\xa6\x4c\xac\xd8\x8e\xef\x0f\x95\x6a\x44\x1b\x7d\x07\xf1\xeb\x1a\x57\x63\x3c\xdf\x22\xde\x18\x88\x0b\xa1\x97\x32\xd3\xe2\x83\x4a\x72\xba\x16\xc0\xe0\xb6\xeb\x36\x9c\xd7\xa6\xb5\x50\xfe\xcf\x66\x26\x47\xdf\x38\xa4\x80\x63\x1a\x87\x1b\x9f\x31\xdf\x09\x8c\x2d\xe5\x32\x2a\x35\x8e\x2b\x8d\xd9\xf9\x18\xdd\x42\xe9\xb6\xf0\x62\xd1\xa9\x4c\xcb\xa0\x36\xdf\xed\x91\x59\x10\xbd\x4e\x53\x57\xf9\x6f\x64\x74\x57\xf4\x49\x1b\x91\xf0\x38\xab\x37\x41\x54\x88\x4b\x70\x94\xb7\x8f\xcd\x6d\xe4\x0d\x46\xf1\x48\x6e\xa4\xd3\xe2\xcb\x63\xf1\x3a\x45\x9e\x4e\x8b\x98\xf6\xca\x79\xcb\x3d\xd2\x9e\x0d\x70\xba\x5b\xf7\xcb\x4f\x45\x2e\xea\xf7\x42\xab\x2f\xa7\x46\xcc\x7a\xf0\xd7\x1b\x88\x44\xf1\x5f\x0d\xa8\xc9\x69\x2a\xd6\xc7\x12\xe5\xb0\x6d\xcd\xa7\x1e\x33\x24\xb5\x68\x55\x9d\xe3\xe6\x37\x88\x42\x1f\xcc\x35\x9b\xc5\x04\x55\xb2\x58\x4f\xd6\xeb\x84\x46\x8d\x2c\x48\xc7\x42\x5d\x0b\xc5\x92\x6d\x51\xd0\xe4\xde\x67\x2a\x47\x8e\xb8\x28\x32\x8c\x8d\x31\x76\x8e\xfd\x7e\xea\xfe\x39\x3a\xb4\xba\x88\x19\xef\xa4\xc5\xa3\x52\x9c\xfd\x44\xd0\xc4\xf3\x9c\xc3\xdb\x7e\x68\xac\x69\xed\xb1\x66\x05\x39\xea\xaa\xff\x13\x00\x00\xff\xff\x55\xcd\x2c\x7a\x0b\x24\x00\x00")

func templatesSearchrequestTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSearchrequestTmpl,
		"templates/searchRequest.tmpl",
	)
}

func templatesSearchrequestTmpl() (*asset, error) {
	bytes, err := templatesSearchrequestTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/searchRequest.tmpl", size: 9227, mode: os.FileMode(420), modTime: time.Unix(1469627595, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSearchrequestenumsTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x55\x4d\x6f\xe3\x36\x10\x3d\x9b\xbf\x62\xa0\x62\xb1\xf2\xc2\xb5\xee\x01\x72\x48\x37\xc2\x22\x80\x6b\xb7\x89\x17\x3d\x14\x05\x42\x49\x63\x89\xb0\x4c\xda\x24\xb5\xdb\x20\xc8\x7f\xef\x8c\xa8\x4f\x6f\xda\x4b\x7d\x31\xc9\x79\xf3\x34\x9c\x79\x33\x3c\xcb\xfc\x28\x4b\x84\xd7\xd7\xf5\x6f\x61\xb9\x95\x27\x7c\x7b\x13\x22\x49\xe0\x4b\xba\x4d\x1f\xef\xf6\xe9\x3d\x7c\xde\xdd\xa7\x2b\x48\xef\x1f\xf6\x4f\xf0\xc7\xc3\x66\x03\xbf\xa4\xb0\xd9\x3d\xed\x09\xc5\xc0\xc6\x29\x5d\x42\xe5\xfd\xf9\x26\x49\x4a\xe5\xab\x26\x5b\xe7\xe6\x94\x64\x56\x49\xed\xbc\xb4\x47\x4c\x4a\xf3\x73\x86\x25\xfa\xa4\x44\x8d\x56\x7a\x63\x13\x87\xd2\xe6\x15\x5a\x21\xd4\xe9\x6c\xac\x87\x58\x2c\xa2\xc3\xc9\x47\xf4\xe7\xbc\x25\x4e\x17\x89\x65\x1b\xca\xee\x1c\x7c\x40\x39\x90\x1a\x4c\xbf\xf5\x06\x32\xa4\xef\x63\x01\x4a\x83\x84\xa7\x96\xf2\x11\x2f\x0d\x3a\x0f\x07\x55\x7b\xa2\xf7\x2f\x67\x9c\x30\x68\xdf\x52\x7e\x36\x1c\x9a\xf6\x4c\x58\x80\xaf\x50\x59\x08\x5f\x85\xdc\x34\x9a\x1c\xcf\xd2\x92\x35\xee\xd9\x9f\x7e\xdf\x40\x17\xbc\x32\x7a\x29\x72\x26\xe0\x98\xd3\xcb\xc8\x7e\x0b\xca\x78\x29\x16\x5b\xe3\xd3\x8b\x58\x6c\xd4\x11\xdb\x4d\x58\x7c\xb1\x28\x89\x78\x5f\x49\x3d\xdb\xec\x6c\x0b\x46\xe7\x7a\xe3\xb8\x0e\xb6\x07\xb7\x6d\xea\xba\xa5\x6a\x17\x21\x2d\xbf\x4a\xeb\x2a\x59\xef\xf1\x6f\x0f\x94\xc3\x1a\x4f\xc8\x17\xe2\x4a\x38\x2e\x85\xa9\xa5\x2e\xd7\xc6\x96\xc9\xf9\x58\x26\xa8\x73\x53\xd0\xfd\x92\x9f\xd8\xa1\xf3\xa5\xfc\x1c\x1a\x9d\x43\x6c\x86\x4b\x2c\xa7\xbc\xf1\x12\xe2\x3f\xff\xca\x5e\x3c\xae\x00\xad\x65\xeb\xab\x58\x7c\x93\x16\x0a\xe9\x65\x97\x31\x21\x16\xee\xbb\xf2\x79\x05\x86\xad\xb9\x74\x08\xe9\xe5\x46\x2c\x16\x2d\xe8\x16\x22\xbc\x44\xdd\x79\x9b\x99\xa9\x49\xf3\x41\x6f\xe5\x3c\x4d\x8d\x35\xed\x27\x9e\xd7\x66\x1d\x8e\x7a\xc4\x24\xa5\x53\x54\x39\x1e\xbf\x83\xe4\x04\xff\x0b\x9a\x4d\x43\x64\x43\x45\x66\xf1\x0d\xa7\x3f\xe2\xae\x89\xeb\x99\xa5\xc7\x87\xca\x4e\x71\xaa\x3d\x99\xdc\xfa\x1a\xa0\xc3\x51\x44\x69\x2f\xf0\x20\x9b\xda\xb3\xd5\xa2\x6f\xac\x06\xad\xea\x15\x50\x17\xad\x53\xae\xd6\x21\x8e\xbe\x6a\x99\xd5\xc8\xad\x72\x0a\x65\x85\xe7\x0f\xdf\x9e\x59\xd1\xdc\x3d\x54\x58\x17\xad\xc0\x2c\xc5\xe2\x4d\xf4\x1c\xa1\xe0\x31\x7f\x6f\xb9\x62\x46\x11\x26\xc2\x57\x7d\xfa\x1f\x8a\x1b\xbc\x27\x9a\xfb\x34\x8a\x6e\x46\x1e\x67\x5d\x10\xcb\xa0\x3a\x96\x15\x69\x0d\x6e\x6e\x3b\xc9\xb9\xf5\xde\xaa\x53\x1c\x36\x71\x46\x61\x3e\x47\xcf\xcb\x51\x88\x0c\xee\xa5\xc8\xea\xe3\x0c\x7d\x32\x94\x3d\xee\xa6\x70\x1a\x84\x37\x18\xba\x96\x0d\xb6\x56\x77\x83\x29\x74\xef\xe0\xb5\x99\x19\x87\xee\x0e\xf6\xa9\xd8\x06\xcc\xac\xf1\x7f\xc0\xb5\x72\x78\x0f\x1b\x7a\xbf\x8b\x68\x54\xda\x18\xd7\x64\x62\x5c\xa3\xe6\xa4\xd7\xf3\x24\xa0\x3b\xa5\x0d\xa8\x7e\xca\x0c\x37\x9d\x9b\xfb\xe1\xf3\x9e\xec\xfe\x5b\x71\x1f\x3f\xb8\x8f\x3c\x79\x0d\xcc\x86\x31\x09\x8f\xea\x34\x93\xde\x28\x36\x1a\xd0\x85\xe2\x51\xdb\x0d\x7d\x45\xdb\xbc\x1d\xb2\xe6\x00\xdf\x2b\xa4\x91\x4d\x4b\x0b\x14\x26\x4d\xfe\x30\xeb\xc1\x55\xa6\xa9\x0b\x76\xa7\x77\x41\x16\x05\x8d\x6e\xd9\x7a\xdf\x6d\xef\x19\x4c\xab\xdd\x23\x47\x46\xde\x10\x1e\x20\x38\x5b\x6c\x99\xd1\x85\xa7\x62\xfc\x70\x3f\xdd\xfa\xe7\xc2\xc1\x81\x38\x5e\x4c\x63\x21\x6b\xbc\x1f\x9f\x80\x3b\x7a\x42\x46\x37\x6a\x51\xfa\x1c\x35\xf0\xce\xc2\xe4\x47\xc7\xbb\x47\x7e\xd1\xfe\x09\x00\x00\xff\xff\xa3\x30\x19\x76\x76\x07\x00\x00")

func templatesSearchrequestenumsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSearchrequestenumsTmpl,
		"templates/searchRequestEnums.tmpl",
	)
}

func templatesSearchrequestenumsTmpl() (*asset, error) {
	bytes, err := templatesSearchrequestenumsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/searchRequestEnums.tmpl", size: 1910, mode: os.FileMode(420), modTime: time.Unix(1469626482, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSqlcreatorTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x93\x41\x8b\xdb\x30\x10\x85\xcf\xd6\xaf\x18\x4c\x28\x4e\x70\xad\x4b\xe9\x61\xa1\x87\xed\xc6\x5b\x02\x4b\x96\x66\xb3\x87\x52\x7a\x90\xed\xb1\xa3\xae\x2d\xa5\xb2\x4c\xb7\x18\xff\xf7\x8e\x64\x87\xdd\x50\xa7\xb4\x27\x83\xa5\xf7\xe6\x7b\x33\xa3\xa3\xc8\x9f\x44\x85\x90\x1b\x14\x16\x19\x5f\xb1\xe0\x53\xba\x4d\x77\xd7\xfb\x74\x0d\x37\xf7\xeb\x34\x86\x2f\xf7\x8f\x3b\x48\xd7\x9b\xfd\x03\x5c\xef\x52\xb8\x7d\xdc\x6f\xee\x52\xc6\x82\x0a\x15\x1a\x12\x15\x50\x1a\xdd\x40\xdf\x27\xfb\x5f\x47\xdc\x8a\x06\x87\x81\x05\x5d\x2b\x55\x05\x07\x6b\x8f\x57\x9c\x57\xd2\x1e\xba\x2c\xc9\x75\xc3\x33\x23\x85\x6a\xad\x30\x4f\xc8\x2b\xfd\x36\xc3\x0a\x2d\x9f\xac\xb4\xe1\x9e\x43\x1b\xb6\xe2\x8c\xc9\xe6\xa8\x8d\x85\x88\x05\xe1\x2b\x83\xef\x8d\x96\x46\x2b\xde\xfe\xa8\x9f\xc3\xf3\xa3\x59\xef\xc9\x31\x24\x62\x4b\x7c\x2d\x84\x13\xe9\xc6\xdb\x0f\x43\xc8\x96\x8c\x71\x7e\x1e\xe0\x66\x54\x41\x81\xa5\x54\x24\xb2\x07\x04\xa9\x2c\x9a\x52\xe4\x08\x25\x9d\xd8\x83\x6c\xe1\x84\xeb\x9c\xe7\x0d\x5e\x44\x3d\x0b\xfc\x4f\x8c\x72\xf0\x24\xc9\x99\x60\x09\x11\xdd\x7d\xff\x2e\x06\x34\x46\x9b\x25\x1b\x3c\xd5\xc3\xe7\xbb\x79\xdf\xe6\x58\x63\x83\xca\xb6\x20\xdc\xa5\x73\x94\x4b\xaa\xd6\x9a\x2e\xb7\x0e\xa5\xc8\x60\xe5\x5a\x98\xac\x3f\x4e\x95\xb6\xf8\xf3\x92\xcc\xa0\xed\x8c\x3a\x55\xca\x44\x4b\x43\x9f\xbb\xc8\xca\x4e\xe5\x7f\x31\x8a\x5e\x55\x5d\xce\xf7\x8b\xd0\xc6\x6a\xf0\xe6\x82\x49\x5f\x64\x57\x45\x36\x38\xea\xbe\x5f\xa8\xae\xb9\x95\x58\x17\x2d\x5c\x7d\x80\x1a\x15\x24\xfe\x9a\xc8\x6a\x1c\xff\x0f\x63\xba\xb1\xf5\x34\x8e\x16\x8d\xef\xd9\x99\x35\x25\xcc\xb5\x29\xe8\x18\xac\xf6\xc3\x2e\x9c\x07\x05\x1d\x23\x45\x06\x56\x17\x70\x96\xf0\x3f\x53\x75\xf9\x72\x5d\x77\x8d\xf2\xc0\x5f\xbf\xd1\x44\xe8\xa1\xd0\xdf\xa0\xef\x8d\x50\xf4\x14\x17\x32\x86\xc5\xb3\x3b\xfd\x33\x0a\xed\xee\x82\x9a\x97\x8d\xe6\x61\xec\x65\xa8\x0a\xf7\xe2\x28\xe7\xa9\x75\xd3\x2e\x24\x1b\x9f\x36\x32\x49\x91\x51\xc7\xe3\x71\xf5\x9d\xdf\x49\x0f\x13\x4b\x0c\xff\x52\x3d\x4f\x7c\xf9\x51\xdc\xf7\xb2\x84\xda\x92\x00\x5e\x86\x30\x0c\xf1\xc4\x33\x7d\xdc\x1a\xff\x0e\x00\x00\xff\xff\x0d\xa1\x76\x38\x64\x04\x00\x00")

func templatesSqlcreatorTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSqlcreatorTmpl,
		"templates/sqlCreator.tmpl",
	)
}

func templatesSqlcreatorTmpl() (*asset, error) {
	bytes, err := templatesSqlcreatorTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sqlCreator.tmpl", size: 1124, mode: os.FileMode(420), modTime: time.Unix(1468871773, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSqlupdaterTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x53\xd1\x6a\xdb\x30\x14\x7d\xb6\xbe\xe2\xce\xb0\x62\x87\x4c\x7a\x19\x7b\x08\xf4\xa1\x9d\xbd\x62\x28\x2d\x4b\x93\x87\x31\xc6\x90\xed\x6b\x47\x6b\x2c\xbb\xb2\xdc\xb5\x84\xfc\xfb\x24\xcb\xde\x12\x88\x57\x28\xdb\x93\xb1\xae\xee\x39\xe7\x9e\xa3\xdb\xf0\xec\x9e\x97\x08\x5d\x93\x73\x8d\x84\xcd\x88\x77\x15\xdf\xc4\xcb\x8b\x55\x1c\xc1\xc7\xdb\x28\x9e\xc3\x97\xdb\xf5\x12\xe2\x28\x59\xdd\xc1\xc5\x32\x86\x4f\xeb\x55\x72\x1d\x13\xe2\x95\x28\x51\x99\xa6\x1c\x0a\x55\x57\xb0\xdb\xd1\xd5\x73\x83\x37\xbc\xc2\xfd\x9e\x78\x5d\x2b\x64\x09\x1b\xad\x9b\x05\x63\xa5\xd0\x9b\x2e\xa5\x59\x5d\xb1\x54\x09\x2e\x5b\xcd\xd5\x3d\xb2\xb2\x7e\x97\x62\x89\x9a\x0d\x50\xb5\x62\x4e\x87\x22\x33\x46\x88\xa8\x9a\x5a\x69\x08\x88\xe7\x17\x95\xf6\x0d\xa5\x7f\x00\xf4\xa3\xaa\x85\xaa\x25\x6b\x1f\xb6\x4f\x3e\x01\xf0\x5f\x22\x19\xa0\x7d\x12\x12\xc2\xd8\xb1\xde\xb5\xab\x81\x68\x41\x6f\x10\x84\x34\x3f\x05\xcf\x90\x68\x73\x65\xe2\xea\x78\x07\x76\xc4\x73\x87\x81\xa3\x58\xe2\x43\x87\xad\x3e\xd5\x36\x94\x42\x40\xa5\x6a\x45\xbc\x08\xb7\xa8\xf1\xf2\x39\x89\x82\x24\xb2\x90\x1f\xde\x8f\xb5\x7d\xaf\xf2\xee\xf3\xf5\x69\xf6\xaa\xd9\x62\x85\x52\xb7\xc0\xed\x25\x48\x79\x6b\x92\x18\xed\xeb\x65\x4f\xf5\xb6\x5a\x75\x99\xb6\xb2\xf3\x14\x66\xd6\x3f\x1a\x5d\x0e\x7c\x37\xf8\x73\xaa\x4d\xa1\xee\x94\xb4\x7c\x59\x2d\x0b\x51\x76\xea\x80\xb0\xe8\x64\xf6\x97\xe6\xe0\x80\x29\x3c\xed\xa7\x91\xe3\x18\xe0\x6c\x02\x64\x97\xa7\x8b\x3c\xdd\x0f\x4a\xdd\xa1\xd5\xf2\x88\xaa\xb7\x61\xda\x6f\xe3\x2c\xe8\xba\xf7\x89\xcb\x1c\xf0\x09\xb3\x4e\x63\x0b\x42\x3b\xe1\x81\x82\xd9\x04\x69\x08\xaf\xcb\xd6\xce\x63\x06\xbe\xd3\x6a\x0e\x8f\x7c\x6b\x2a\x73\x5b\x80\xc5\xf9\xe8\x19\xbd\x42\xed\x3a\x0d\x75\x70\x76\x84\x6f\x9e\xa8\x27\x8a\xbe\xe1\xcd\x39\x48\xb1\xb5\x70\xa3\x3f\x66\x19\x68\x6c\x39\x8a\xc0\xef\xbf\x30\xec\x8f\xdd\x38\x3b\x63\x61\xe9\xa7\xcd\x58\xc0\xdb\xd6\xef\xd5\x38\x98\x20\x0c\x89\x67\x4c\xf5\xbe\x3b\x89\xe7\xa0\x68\x9e\xd2\xd8\xb8\x14\x1c\x8f\x40\x83\xaf\xdf\x7e\xbf\xfb\xdd\x3e\xa4\x94\x5a\xa5\x83\x2e\xd3\x3b\x64\xf3\xe7\x59\x8f\xd2\xd0\x06\xe4\x8e\x87\xf9\x5f\x91\xc4\xf4\xb6\x58\x7b\xba\xde\xdc\xe9\xb9\xad\x83\x49\xb4\x80\x24\x9a\xbb\x71\x5f\x8e\xc7\x11\xba\x78\xd4\x3f\xce\xe4\xd0\xa4\xff\x9b\xc8\xaf\x00\x00\x00\xff\xff\x55\x14\x71\xcc\xe4\x05\x00\x00")

func templatesSqlupdaterTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSqlupdaterTmpl,
		"templates/sqlUpdater.tmpl",
	)
}

func templatesSqlupdaterTmpl() (*asset, error) {
	bytes, err := templatesSqlupdaterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/sqlUpdater.tmpl", size: 1508, mode: os.FileMode(420), modTime: time.Unix(1468871773, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesUpdaterequestTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x57\x4d\x6f\xdb\x46\x10\x3d\x73\x7f\xc5\x94\x4d\x6a\xca\x50\xc9\x1e\x8a\x1e\x04\xf8\xe0\x56\x4a\xe0\x22\xb5\x51\x5b\x3e\x14\x86\x01\x2d\xc5\x95\x44\x5b\x5c\x32\xbb\x4b\xc7\x2e\xa1\xff\xde\x99\x5d\x8a\x22\x2d\x59\x76\x12\x07\xe8\x21\xb9\x44\xd2\xee\x7c\xbd\xf7\x66\x66\x5d\xf0\xe9\x2d\x9f\x0b\x28\x8b\x84\x1b\xc1\xa2\x43\xe6\xbd\x1f\x9d\x8e\xce\x8f\xc7\xa3\x21\xfc\x71\x36\x1c\xf5\xe1\x9f\xb3\xcb\x73\x18\x0d\x4f\xc6\x17\x70\x7c\x3e\x82\x77\x97\xe3\x93\x0f\x23\xc6\xbc\xb9\x90\x42\xa1\x51\x02\x33\x95\x67\x50\x55\xe1\xf8\xa1\x10\xa7\x3c\x13\xab\x15\xf3\x4a\x9d\xca\x39\x2c\x8c\x29\x06\x51\x34\x4f\xcd\xa2\x8c\xc3\x69\x9e\x45\xb1\x4a\xb9\xd4\x86\xab\x5b\x11\xcd\xf3\x9f\x63\x31\x17\x26\xaa\x5d\xe5\x2a\x72\x79\x28\x76\x18\x31\x96\x66\x45\xae\x0c\x04\xcc\xf3\x67\x99\xf1\xf1\x3f\x6d\x14\x7a\xd5\xf4\x51\xc8\x69\x9e\xe0\x97\xe8\x46\xe7\xd2\x67\x3d\xc6\xa2\xa8\x9b\xc3\xbb\x54\x2c\x13\x48\x35\x70\x98\xd9\x8f\x9f\x30\x8b\x54\x82\x59\x88\xee\x45\x40\xb7\xe5\xd4\x90\x03\xb3\xe0\xc6\x9a\xc4\x4b\x01\x26\x87\x78\x8d\x4c\xc2\x0c\xde\xdf\x19\x40\x1a\x1b\x7b\x24\xcb\xec\x00\xb1\xc8\x15\x2c\xc4\xb2\x98\x95\x4b\x29\xb4\x66\xd3\x1c\xab\x85\xa0\xaa\xde\x98\xda\x10\x06\x47\xd0\x86\xaa\xaa\x14\x97\x48\xc1\x9b\xb4\x0f\x6f\xee\xed\xe9\xa5\x8d\x49\x49\xd8\x18\x7a\xb5\x6a\xd9\xdb\x2f\xf7\x61\x9d\x7b\x55\xa5\x33\x10\x1f\xd1\x1a\x7e\x79\x74\xcd\xe5\x77\x04\x69\x6e\x78\x55\x09\x99\xd8\x60\xf6\x7f\x07\xd7\x5f\x5c\xe9\x05\x5f\x8e\xc5\x3d\x16\x9d\x15\x4b\x91\x09\x69\xb4\x25\x4d\x13\x6b\xf9\x12\x13\x0b\x73\x35\x8f\x8a\xdb\x79\xd4\x20\xfe\x23\x19\xd4\xb6\x48\xd5\xac\x94\x53\x08\xf4\x0e\x6c\x7a\xed\x08\x41\x0f\x82\xab\xeb\xf8\xc1\x88\x3e\x08\xa5\x72\xd5\x83\x8a\x79\x77\x5c\x01\xd6\xca\xc1\x51\x8b\xb2\xd2\x48\xd3\x74\x01\x9a\x4e\x5f\x04\xcd\x94\x6b\x22\x66\x37\x3e\x03\xe6\x79\xd6\xff\x11\xf8\xf6\xe7\x3f\x2f\xce\x4e\xdd\x91\x4f\xfe\x1d\x2a\x5e\x22\x66\xbc\x5c\x1a\xba\xad\x84\x29\x95\x04\x99\x2e\xfb\x80\xb2\x0b\x47\x94\xeb\x2c\xf0\x2f\xe5\x5a\x14\x99\x2b\x0a\x26\x6f\xef\x26\x40\x82\x42\x9d\x60\x59\xda\xef\x83\xee\x31\x0f\xdd\xd5\x3e\x5c\xb9\x01\xc5\xef\xf5\xc9\x23\x5b\x59\xdc\x2f\x65\xf6\x15\xc8\x37\xd6\x2d\xec\x0f\x77\x81\xdf\x09\x13\xc4\x75\x3a\x3d\x87\x3e\xc1\x8b\x98\x13\xa6\x75\x57\x85\x63\x95\x66\x81\xfb\x12\xc4\x98\xf0\xc4\x9f\xf4\x5a\x84\x18\xf5\x79\x94\x6c\xe1\x4d\xe8\x1e\x6a\x64\xe2\x29\xb2\xf6\x12\xb2\x9f\x8b\x83\xb7\xfa\x80\x5a\x31\x87\x27\xfa\x94\xc8\x31\xaa\x43\xcf\x86\x90\x61\x6c\xef\xd8\xee\x74\x87\xda\x8e\x09\x49\x3f\xe4\x33\xfb\xd9\xcd\x10\x0c\x50\x62\x6d\xf5\x18\xb9\xf8\xfb\x03\x7c\x2c\x85\x7a\xd8\xdb\x04\x2d\xef\xd8\x04\x0e\x60\x0b\xff\xab\x2b\xbd\x2e\xcc\x21\x3f\x8c\xb7\x75\xbe\x29\xde\xf7\xeb\xda\x3b\x19\xbb\x98\xe7\x02\x8b\xc2\xa9\x85\x24\xa4\x38\xc4\x70\x80\x6a\x61\x08\x87\x82\x2b\xbc\x86\xf3\x59\xd3\x9c\x23\x6b\x3b\x1d\x6d\x3d\x6d\x37\x21\xc0\x89\x81\x29\x97\x34\x40\xb5\xc0\x91\xbf\x4c\xff\xc5\x45\xc1\x65\x82\x3e\xb4\xc6\x71\x8a\xb6\xb1\x30\x9f\x84\x90\x74\xe1\x2e\x9d\x52\x1c\x0d\x24\x97\x3e\xa0\x3c\x11\x65\x8b\xf6\x7a\xcb\x60\x12\x84\x36\x6e\x0e\x63\x9b\x25\xdc\x31\x90\xbb\xd9\xbb\xa9\x4e\xe0\x9e\x0c\x49\x1a\xbf\xfd\x0a\x13\x5a\x16\x03\x3f\x4d\xfc\x09\xf3\xdc\x6d\x8d\x12\x2a\xae\xb6\x69\xbb\x46\x0b\xa1\x66\x7c\x2a\xaa\xd5\xda\xce\xad\x02\x8d\xc6\xab\x57\x9f\x9f\xa5\xda\x53\xcb\x0b\x06\xa9\x93\x55\x8a\x2a\x4d\x48\x3d\x19\xbf\x15\x01\x55\xe6\x7e\x6f\x57\x43\x3d\x4d\x5b\xea\x56\x3c\xf4\xe1\x8e\x2f\x4b\xbb\x91\x9c\xfc\x4a\x15\xae\x61\x41\x9f\x9e\xb6\x11\xe8\x18\x2f\x87\x9d\x1c\xd0\x89\x47\x9b\x07\x8f\x7f\x38\xa2\x56\xb2\x06\x9d\xe9\x89\x67\xf8\xd3\x8a\x6e\xb6\xb2\xab\x33\x0a\x74\xef\x1a\x47\x81\x8d\xcf\xec\x25\x25\x34\x76\xbc\x4b\x7e\x57\xde\xe4\xbf\xa1\x60\x00\x2d\x97\x7d\x3a\x41\x52\x07\x60\xff\x61\x11\x27\xc3\xfe\xda\xa9\xcd\x87\xf8\x5b\xe7\x1f\xb8\x40\xbd\x2e\x89\xbf\xa7\x92\xab\x87\xcf\xa2\xd1\x99\x7c\x19\x91\xce\xf6\x3b\x95\xaf\x4a\xe5\x6b\xef\x55\xa4\xf2\x70\x1f\x97\xcf\x2e\x58\x7a\xdd\xa4\x4f\x60\x80\x15\xd5\x84\xd8\x8a\x1a\x5f\x41\xdc\x87\x9f\x52\x22\x65\x9b\x93\x1a\x02\xcb\x06\x39\xb0\xf0\xd0\x0b\xef\x8a\x30\xbb\x0e\x03\x3b\xe6\xc8\x96\x22\xdf\x40\x4b\x3c\xfb\x27\xdc\x3e\x21\xa1\xf3\x35\x55\x18\xe1\x09\x21\xda\xf4\x28\x68\xb1\x63\x05\xe2\x11\x15\x72\x04\x45\xd8\x85\xac\x7e\x20\x61\xd4\xde\x33\x2a\x5c\x0b\xd0\xf3\x6e\xae\x8a\x47\x6a\x6b\x29\x1d\xc1\x64\x3b\xf6\x7b\x13\xf5\x8b\xbb\xfc\x2b\xc4\x51\xb7\xfa\x77\x79\xfc\x6f\xe5\xf1\x5e\x18\x7a\x22\x6c\x44\x51\xff\x15\x1a\x76\x1f\x14\x4d\x41\x2f\x54\x80\x75\x8b\x23\xde\xbd\x3d\xaa\x26\xb0\xa5\x65\x13\x7a\x4c\x4f\x3c\xfb\xf4\xfc\x16\x19\x34\xde\x3b\x4f\xcf\xcd\x43\x31\x6c\x2e\xd0\x4b\xb1\x49\x6a\x8d\xd8\xb7\x48\xa9\xf6\x8d\x09\xed\x56\x0b\x25\x58\x4b\xea\x85\xfb\xcf\xbe\xcd\x9f\xdb\x80\xb5\xcb\x2b\x7b\x39\xec\x3c\xca\xb7\xd6\x97\xe3\xc9\x19\xd4\xa0\x1c\x27\x89\xf3\xf6\xfa\x98\x34\xae\x03\xf7\x47\xc6\x76\x8b\xac\x6b\x7b\xdc\x53\xd8\x11\x6d\x79\x6f\x1a\xa3\x23\xfa\x17\x77\xf9\xa3\x7e\x71\x50\x6d\xc0\x59\xb1\xff\x02\x00\x00\xff\xff\xf4\x5c\x8f\xfc\x2f\x12\x00\x00")

func templatesUpdaterequestTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesUpdaterequestTmpl,
		"templates/updateRequest.tmpl",
	)
}

func templatesUpdaterequestTmpl() (*asset, error) {
	bytes, err := templatesUpdaterequestTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/updateRequest.tmpl", size: 4655, mode: os.FileMode(420), modTime: time.Unix(1468871773, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/ginCreator.tmpl": templatesGincreatorTmpl,
	"templates/ginUpdater.tmpl": templatesGinupdaterTmpl,
	"templates/searchRequest.tmpl": templatesSearchrequestTmpl,
	"templates/searchRequestEnums.tmpl": templatesSearchrequestenumsTmpl,
	"templates/sqlCreator.tmpl": templatesSqlcreatorTmpl,
	"templates/sqlUpdater.tmpl": templatesSqlupdaterTmpl,
	"templates/updateRequest.tmpl": templatesUpdaterequestTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"ginCreator.tmpl": &bintree{templatesGincreatorTmpl, map[string]*bintree{}},
		"ginUpdater.tmpl": &bintree{templatesGinupdaterTmpl, map[string]*bintree{}},
		"searchRequest.tmpl": &bintree{templatesSearchrequestTmpl, map[string]*bintree{}},
		"searchRequestEnums.tmpl": &bintree{templatesSearchrequestenumsTmpl, map[string]*bintree{}},
		"sqlCreator.tmpl": &bintree{templatesSqlcreatorTmpl, map[string]*bintree{}},
		"sqlUpdater.tmpl": &bintree{templatesSqlupdaterTmpl, map[string]*bintree{}},
		"updateRequest.tmpl": &bintree{templatesUpdaterequestTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

